{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/IGR/tnega-pratik/src/Pages/AuthPages/ForgetOTP.js\";\nimport React, { Component } from 'react';\nimport titleIcon from \"../../Assests/icon2/Bimg.svg\";\nimport loginIcon from \"../../Assests/icon2/loginIcon.svg\";\nimport captachImg from '../../Assests/icon2/captach.PNG';\nimport SignIn_OTP from './Otp';\nimport { loginApi, OtpVerified, forgotApi } from '../../store/Login/action';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport signin_bannerImg from '../../Assests/icon/signin_bannerImg.png';\nimport RCG from 'react-captcha-generator';\nimport { BsJustify } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\nimport * as CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\n\nclass Forget_OTP extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateOTP = () => {\n      this.props.history.push('/changePassword');\n    };\n\n    this.handleOtpChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleVerifyOTP = () => {\n      const encryptconfigs = {\n        \"key\": \"t700#zkrF@db0705\",\n        \"iv\": \"i700#zkrF@db0705\"\n      };\n      var key = CryptoJS.enc.Latin1.parse(encryptconfigs.key);\n      var iv = CryptoJS.enc.Latin1.parse(encryptconfigs.iv);\n      var encryptedData = CryptoJS.AES.encrypt(this.state.otp, key, {\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n      });\n      encryptedData = encryptedData.toString();\n      console.log(encryptedData);\n\n      if (this.state.minutes !== 0 || this.state.seconds !== 0) {\n        console.log(\"otp verify\");\n        const data = {\n          email: this.props.location.state.email,\n          otp: encryptedData\n        };\n        this.props.OtpVerified(data);\n      } else {\n        MySwal.fire('Times Up').then(() => this.props.history.push('/'));\n      }\n    };\n\n    this.handleOtpChange = event => {\n      console.log(event);\n      this.setState({\n        otp: event\n      });\n    };\n\n    this.resendotp = () => {\n      const data = {\n        email: this.props.history.location.state.email\n      };\n      this.props.forgotApi(data);\n    };\n\n    this.state = {\n      email: '',\n      booleanOTpPage: false,\n      otp: \"\",\n      minutes: 3,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n\n    if (this.props.history.location.state === undefined) {\n      this.props.history.push('/');\n    }\n\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    //For Check OTP is verified  successfully or not\n    if (prevProps.verify_otp !== this.props.verify_otp) {\n      console.log(this.props.verify_otp);\n      MySwal.fire(this.props.verify_otp.message).then(() => this.props.history.push({\n        pathname: '/ChangePassword',\n        state: {\n          token: this.props.verify_otp.token,\n          email: this.props.location.state.email\n        }\n      }));\n    } //For Verify OTP error message\n\n\n    if (prevProps.VerifyOtp_err !== this.props.VerifyOtp_err) {\n      console.log(prevProps.VerifyOtp_err);\n      toast.error('Invalid OTP');\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    const {\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-layout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-sub-layout\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8  login-titleRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: titleIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Blockchained Documents Of Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" text\",\n              children: \"All Tamil Nadu Registration documents secured by Tamil Nadu Blockchain backbone infrastructure.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-bannerImg\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: signin_bannerImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), \" \\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-card-sub-layout\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12 loginRow1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: loginIcon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 45\n                    }, this), \" \\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Enter OTP \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 82\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mt-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(OTPInput, {\n                      value: this.state.otp,\n                      onChange: this.handleOtpChange,\n                      autoFocus: true,\n                      OTPLength: 6,\n                      otpType: \"number\",\n                      disabled: false,\n                      secure: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"rsndOtp\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        style: {\n                          cursor: 'pointer'\n                        },\n                        onClick: () => this.resendotp(),\n                        style: {\n                          color: '#377D22'\n                        },\n                        children: \"Didn\\u2019t Receive Code Resend OTP?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row mt-5 mb-3 \",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12 \",\n                        style: {\n                          display: 'flex'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => this.handleVerifyOTP(),\n                          className: \"login-submit\",\n                          type: \"submit\",\n                          style: {\n                            color: 'white',\n                            backgroundColor: '#20570F',\n                            border: 'none',\n                            borderRadius: '5px',\n                            padding: '5px 10px'\n                          },\n                          children: \"Log In\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 49\n                        }, this), minutes === 0 && seconds === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px',\n                            marginLeft: '10px',\n                            marginTop: '10px'\n                          },\n                          children: \"Times Up!\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 55\n                        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                          style: {\n                            fontSize: '15px',\n                            marginLeft: '10px',\n                            marginTop: '10px'\n                          },\n                          children: [\"Time Remaining: \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 55\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    login_res: state.login.otp_verify,\n    login_res_err: state.login.otp_verify_error,\n    verify_otp: state.login.verify_otp,\n    forget_res: state.login.forget_response,\n    forget_res_err: state.login.forget_res_err,\n    VerifyOtp_err: state.login.verify_otp_err.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    loginApi,\n    OtpVerified,\n    forgotApi\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forget_OTP);\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/Pages/AuthPages/ForgetOTP.js"],"names":["React","Component","captachImg","SignIn_OTP","loginApi","OtpVerified","forgotApi","bindActionCreators","connect","Swal","withReactContent","signin_bannerImg","RCG","BsJustify","toast","OTPInput","ResendOTP","CryptoJS","configure","MySwal","Forget_OTP","constructor","props","validateOTP","history","push","handleOtpChange","event","console","log","target","value","setState","name","handleVerifyOTP","encryptconfigs","key","enc","Latin1","parse","iv","encryptedData","AES","encrypt","state","otp","mode","CBC","padding","pad","Pkcs7","toString","minutes","seconds","data","email","location","fire","then","resendotp","booleanOTpPage","componentDidMount","undefined","myInterval","setInterval","clearInterval","componentDidUpdate","prevProps","verify_otp","message","pathname","token","VerifyOtp_err","error","render","titleIcon","loginIcon","cursor","color","display","backgroundColor","border","borderRadius","fontSize","marginLeft","marginTop","mapStateToProps","login_res","login","otp_verify","login_res_err","otp_verify_error","forget_res","forget_response","forget_res_err","verify_otp_err","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport titleIcon from '../../Assests/icon2/Bimg.svg';\r\nimport loginIcon from '../../Assests/icon2/loginIcon.svg';\r\nimport captachImg from '../../Assests/icon2/captach.PNG';\r\nimport SignIn_OTP from './Otp';\r\nimport { loginApi , OtpVerified ,forgotApi} from '../../store/Login/action';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport signin_bannerImg from '../../Assests/icon/signin_bannerImg.png'\r\nimport RCG from 'react-captcha-generator';\r\nimport { BsJustify } from 'react-icons/bs';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\r\nimport * as CryptoJS from 'crypto-js'\r\n\r\ntoast.configure()\r\nconst MySwal = withReactContent(Swal);\r\n\r\nclass Forget_OTP extends Component{\r\n\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            booleanOTpPage:false,\r\n            otp: \"\",\r\n            minutes: 3,\r\n            seconds: 0,\r\n        }\r\n    }\r\n\r\n    validateOTP=()=>{\r\n        this.props.history.push('/changePassword')\r\n    }\r\n\r\n    //OnChange function for OTP input Box\r\n    handleOtpChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    //Submit button function for Otp Verification\r\n    handleVerifyOTP=()=>{\r\n\r\n        const encryptconfigs = {\r\n            \"key\": \"t700#zkrF@db0705\",\r\n            \"iv\": \"i700#zkrF@db0705\"\r\n          }\r\n          \r\n          var key = CryptoJS.enc.Latin1.parse(encryptconfigs.key);\r\n              var iv = CryptoJS.enc.Latin1.parse(encryptconfigs.iv);\r\n              var encryptedData = CryptoJS.AES.encrypt(this.state.otp, key,{\r\n                iv: iv,\r\n                mode: CryptoJS.mode.CBC,\r\n                padding: CryptoJS.pad.Pkcs7,\r\n              });\r\n             \r\n              encryptedData = encryptedData.toString()\r\n              console.log(encryptedData)\r\n        \r\n        if(this.state.minutes !== 0 || this.state.seconds !== 0){\r\n        console.log(\"otp verify\");\r\n        const data={\r\n            email:this.props.location.state.email,\r\n            otp: encryptedData\r\n        }\r\n        this.props.OtpVerified(data);\r\n        }else{\r\n            MySwal.fire('Times Up').then(() => this.props.history.push('/'))\r\n          }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        if(this.props.history.location.state === undefined){\r\n            this.props.history.push('/')\r\n        }\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n  \r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            } \r\n        }, 1000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        //For Check OTP is verified  successfully or not\r\n       if(prevProps.verify_otp !== this.props.verify_otp){\r\n            console.log(this.props.verify_otp);\r\n            MySwal.fire(this.props.verify_otp.message)\r\n            .then(() =>\r\n                this.props.history.push({\r\n                    pathname: '/ChangePassword',\r\n                    state: {\r\n                        token: this.props.verify_otp.token,\r\n                        email:this.props.location.state.email,\r\n                    },\r\n                }),\r\n            )\r\n        }\r\n\r\n        //For Verify OTP error message\r\n        if(prevProps.VerifyOtp_err !== this.props.VerifyOtp_err){\r\n            console.log(prevProps.VerifyOtp_err)\r\n            toast.error('Invalid OTP');\r\n        }\r\n    }\r\n\r\n    handleOtpChange = (event) => {\r\n        console.log(event)\r\n        this.setState({\r\n            otp: event,\r\n        })\r\n    }\r\n    \r\n\r\n    resendotp = () => {\r\n        const data={\r\n          email:this.props.history.location.state.email,\r\n        }\r\n        this.props.forgotApi(data);\r\n      }\r\n    render(){\r\n        console.log(this.state);\r\n        console.log(this.props);\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            <div className='login-layout'>\r\n                <div className='login-sub-layout'>\r\n                    <div className='row mt-3'>\r\n                        <div className='col-md-8  login-titleRow'>\r\n                            <img src={titleIcon} /> &nbsp;&nbsp;\r\n                            <label>Blockchained Documents Of Registration</label>\r\n                            <div className=' text'>\r\n                                All Tamil Nadu Registration documents secured by Tamil Nadu Blockchain backbone infrastructure.\r\n                            </div>\r\n                        \r\n                            <div className='login-bannerImg'>\r\n                                <img src={signin_bannerImg} /> &nbsp;&nbsp;    \r\n                            </div>\r\n                        </div >              \r\n                        <div className='col-md-4'>\r\n                            <div className='login-card'>\r\n                                <div className='login-card-sub-layout'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-12 loginRow1'>\r\n                                            <img src={loginIcon} /> &nbsp;&nbsp; <label>Enter OTP </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col mt-4'>\r\n                                        <div className='col-md-12'>\r\n                                        <OTPInput value={this.state.otp} onChange={this.handleOtpChange} autoFocus OTPLength={6} otpType=\"number\" disabled={false} secure />\r\n                                        <div id=\"rsndOtp\" >\r\n                                            <a style={{cursor:'pointer'}} onClick={() => this.resendotp()} style={{color:'#377D22'}}>Didn’t Receive Code Resend OTP?</a>\r\n                                        </div>\r\n                                        <div className='row mt-5 mb-3 '>\r\n                                            <div className='col-md-12 ' style={{display:'flex'}}>\r\n                                                <button  onClick={() => this.handleVerifyOTP()} className='login-submit' type=\"submit\" style={{color:'white',backgroundColor:'#20570F',border:'none',borderRadius:'5px',padding:'5px 10px'}}>Log In</button>\r\n                                                { minutes === 0 && seconds === 0\r\n                                                    ? <h1 style={{fontSize: '15px',marginLeft: '10px',marginTop: '10px'}}>Times Up!</h1>\r\n                                                    : <h1 style={{fontSize: '15px',marginLeft: '10px',marginTop: '10px'}}>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        login_res: state.login.otp_verify,\r\n        login_res_err: state.login.otp_verify_error,\r\n        verify_otp: state.login.verify_otp,\r\n        forget_res: state.login.forget_response,\r\n        forget_res_err: state.login.forget_res_err,\r\n        VerifyOtp_err: state.login.verify_otp_err.data\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {\r\n            loginApi,\r\n            OtpVerified,\r\n            forgotApi,\r\n        },\r\n        dispatch,\r\n    )\r\n}\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Forget_OTP);"]},"metadata":{},"sourceType":"module"}