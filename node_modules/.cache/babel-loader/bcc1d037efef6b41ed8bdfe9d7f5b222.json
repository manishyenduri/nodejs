{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/IGR/tnega-pratik/src/Components/MisPagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AiFillStepBackward, AiFillStepForward } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MisPaginationBar = ({\n  elementsPerPage,\n  totalElelemt,\n  onPaginationChange\n}) => {\n  _s();\n\n  const [counter, setCounter] = useState(1);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalElelemt / elementsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  useEffect(() => {\n    const value = elementsPerPage * counter; //  console.log(\"start value \" , value-elementsPerPage)\n    //  console.log(\"end value \" , value)\n    //onPaginationChange(value-elementsPerPage , value)\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 mt-5 mb-4 navigationBarScss\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-dataNumber\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-page-data-count\",\n        children: elementsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Items Per Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-pagenumber\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-paggination\",\n        children: [/*#__PURE__*/_jsxDEV(AiFillStepBackward, {\n          className: \"btn-btn-primary\",\n          onClick: () => {\n            if (counter > 1) {\n              setCounter(counter - 1);\n              onPaginationChange(counter - 1);\n            }\n          },\n          style: {\n            cursor: 'pointer',\n            backgroundColor: 'transparent'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: 'space-between'\n          },\n          children: pageNumbers.map(index => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${counter === index ? 'active' : 'inactive'}`,\n            id: index,\n            onClick: () => {\n              setCounter(index);\n              onPaginationChange(index);\n            },\n            children: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AiFillStepForward, {\n          className: \"btn-btn-primary\",\n          onClick: () => {\n            if (counter < pageNumbers.length) {\n              setCounter(counter + 1);\n              onPaginationChange(counter + 1);\n            }\n          },\n          style: {\n            cursor: 'pointer',\n            backgroundColor: 'transparent',\n            bordern: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MisPaginationBar, \"mmv6luZqrqQZLxiXmRF8bzfTXjE=\");\n\n_c = MisPaginationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MisPaginationBar\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/Components/MisPagination.js"],"names":["React","useState","useEffect","AiFillStepBackward","AiFillStepForward","MisPaginationBar","elementsPerPage","totalElelemt","onPaginationChange","counter","setCounter","pageNumbers","i","Math","ceil","push","value","cursor","backgroundColor","display","alignItems","map","index","length","bordern"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AiFillStepBackward, AiFillStepForward } from 'react-icons/ai'\n\nexport const MisPaginationBar = ({\n  elementsPerPage,\n  totalElelemt,\n  onPaginationChange,\n}) => {\n  const [counter, setCounter] = useState(1)\n  const pageNumbers = []\n\n  for (let i = 1; i <= Math.ceil(totalElelemt / elementsPerPage); i++) {\n    pageNumbers.push(i)\n  }\n\n  useEffect(() => {\n    const value = elementsPerPage * counter\n\n    //  console.log(\"start value \" , value-elementsPerPage)\n    //  console.log(\"end value \" , value)\n    //onPaginationChange(value-elementsPerPage , value)\n  }, [counter])\n  return (\n    <div className=\"col-md-12 mt-5 mb-4 navigationBarScss\">\n      <div className=\"navigation-dataNumber\">\n        <div className=\"navigation-page-data-count\">{elementsPerPage}</div>\n        &nbsp; &nbsp;\n        <label>Items Per Page</label>\n      </div>\n      <div className=\"pagination-pagenumber\">\n        <div className=\"pagination-paggination\">\n          <AiFillStepBackward\n            className=\"btn-btn-primary\"\n            onClick={() => {\n              if (counter > 1) {\n                setCounter(counter - 1)\n                onPaginationChange(counter - 1)\n              }\n            }}\n            style={{\n              cursor: 'pointer',\n              backgroundColor: 'transparent',\n            }}\n          ></AiFillStepBackward>\n          <div style={{display:\"flex\", alignItems:'space-between'}}> \n            {pageNumbers.map((index) => (\n              <button\n                key={index}\n                className={`${counter === index ? 'active' : 'inactive'}`}\n                id={index}\n                onClick={() => {\n                  setCounter(index)\n                  onPaginationChange(index)\n                }}\n              >\n                {index}\n              </button>\n            ))}\n          </div>\n\n          <AiFillStepForward\n            className=\"btn-btn-primary\"\n            onClick={() => {\n              if (counter < pageNumbers.length) {\n                setCounter(counter + 1)\n                onPaginationChange(counter + 1)\n              }\n            }}\n            style={{\n              cursor: 'pointer',\n              backgroundColor: 'transparent',\n              bordern:'none'\n            }}\n          ></AiFillStepForward>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}