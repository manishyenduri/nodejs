{"ast":null,"code":"import { devUrl, devURLTnega } from '../../utilities/config';\nimport { GET_BATCH_UPLOAD_LIST, GET_BATCH_UPLOAD_LIST_BY_ID, UPDATE_STATUS, GET_CITY_NAMES, GET_REPORT_TYPE, GET_STATE_NAMES, GET_USER_DEPARTMENTS, GET_USER_PREVILEGES, GET_USER_ROLE_LIST, POST_USER_ROLES, SET_ROUTING_NAME, POST_ADDUSER_DETAILS, POST_ADDUSER, POST_ADDUSER_ERROR, GET_ALL_USERS_DETAILS, GET_MIS_REPORT, GET_MIS_REPORT_BY_ID, GET_ALL_ZONES, GET_ALL_DISTRICT, GET_SRO_BY_DISTRICT, ADD_USER, BATCH_REPORT_ROW } from './types';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport axios from 'axios';\nimport BatchId from '../../Pages/RegistrationPortal/BatchId/BatchId';\nimport { dispatch } from 'd3';\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nlet authtoken = 'p13orL5Za5AM1vgYNckreM74Hk10gs';\nexport const setRoutingName = data => dispatch => {\n  if (data != '') dispatch({\n    type: SET_ROUTING_NAME,\n    payload: data\n  });\n};\nexport const user_privileges = () => dispatch => {\n  const API_URL = `${devUrl}module-privileges/`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_USER_PREVILEGES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getUserDept = () => dispatch => {\n  const API_URL = `${devUrl}department/`;\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => dispatch({\n    type: GET_USER_DEPARTMENTS,\n    payload: response\n  })).catch(err => console.log(err));\n}; // report-type\n\nexport const getUserRole_ReportType = () => dispatch => {\n  const API_URL = `${devUrl}report-type/`;\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => dispatch({\n    type: GET_REPORT_TYPE,\n    payload: response\n  })).catch(err => console.log(err));\n};\nexport const createUserRole = data => dispatch => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`; //     const body ={\n  // \"role_id\": \"SG0003\",\n  // \"status_id\": 1,\n  // \"role_name\": \"Manger\",\n  // \"department_ids\": [1],\n  // \"description\": \"test descr hai\",\n  // \"creation_date\": \"2021-12-19\",\n  // \"deactivation_date\": \"2022-12-19\",\n  // \"sanction_transaction_min\": \"100\",\n  // \"sanction_transaction_max\": \"50000\",\n  // \"transaction_auth_limit_min\": \"400\",\n  // \"transaction_auth_limit_max\": \"50000\",\n  // \"data_upload_access_upload\" : \"True\",\n  // \"data_upload_access_download\" : \"True\",\n  // \"remarks\" : data.remarks,\n  // \"reports_name_id\" : 2,\n  // \"privileges\": {\n  // \t\"1\": [1,2],\n  //     \"3\": [2, 4]\n  // }\n  // }\n  // const body = {\n  //     \"role_id\":  data.role_id,\n  //     \"status_id\": 1,\n  //     \"role_name\": data.role_name,\n  //     \"department_ids\": data.department_ids,\n  //     \"description\":  data.description,\n  //     \"creation_date\": data.creation_date,\n  //     \"deactivation_date\": data.deactivation_date,\n  //     \"sanction_transaction_min\": data.sanction_transaction_min,\n  //     \"sanction_transaction_max\": data.sanction_transaction_max,\n  //     \"transaction_auth_limit_min\": data.transaction_auth_limit_min,\n  //     \"transaction_auth_limit_max\": data.transaction_auth_limit_max,\n  //     \"data_upload_access_upload\" : \"True\",\n  //     \"data_upload_access_download\" : \"True\",\n  //     \"remarks\" : data.remarks,\n  //     \"reports_name_id\" :2,\n  //     // data.reports_name,\n  //     \"privileges\": {\n  //         \"1\": [1,2]\n  //     }\n  //     }\n\n  const body = {\n    role_id: data.role_id,\n    status_id: parseInt(data.status_id),\n    role_name: data.role_name,\n    department_ids: data.department_ids,\n    description: data.description,\n    creation_date: data.creation_date,\n    deactivation_date: data.deactivation_date,\n    privileges: data.privileges,\n    sanction_transaction_min: data.sanction_transaction_min,\n    sanction_transaction_max: data.sanction_transaction_max,\n    transaction_auth_limit_min: data.transaction_auth_limit_min,\n    transaction_auth_limit_max: data.transaction_auth_limit_max,\n    data_upload_access_upload: data.data_upload_access_upload,\n    data_upload_access_download: data.data_upload_access_download,\n    remarks: data.remarks,\n    // remark_history:'',\n    report_types: data.reports_name\n  };\n  console.log(body); // return;\n\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(response => {\n    console.log('user - role -- ', response); // if(response.status===200){\n\n    dispatch({\n      type: POST_USER_ROLES,\n      payload: response.data\n    });\n    MySwal.fire('User Role Creation', 'Completed', 'success'); // }\n  }).catch(err => {\n    MySwal.fire('User Role Creation', err.response.data.error, 'error');\n    console.log('Error-> ', err.response); // dispatch({type:FETCH_TRADE_LIST, payload:err.response.data})\n  });\n};\nexport const user_roles_list = () => dispatch => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_USER_ROLE_LIST,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n  });\n}; //New integration of 2022\n\nexport const get_citys = () => dispatch => {\n  const API_URL = `${devUrl}state/`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_CITY_NAMES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n  });\n}; //\n\nexport const get_state = () => dispatch => {\n  const API_URL = `${devUrl}city/`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_STATE_NAMES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n  });\n}; //Admin APIs\n\nexport const getBatchUploadData = () => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_BATCH_UPLOAD_LIST,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const getBatchUploadDataByID = id => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_BATCH_UPLOAD_LIST_BY_ID,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n}; //adduser\n\nexport const addUserApi = data => dispatch => {\n  console.log(data); // return;\n\n  const API_URL = `${devURLTnega}api/adduser`;\n  const body = {\n    user: {\n      username: data.name,\n      email: data.email,\n      designation: data.designation,\n      mobile: data.mobile,\n      zone: data.zone,\n      role: data.role,\n      sub_reg_ofc: data.sub_reg_ofc,\n      address: 'test',\n      district: data.district\n    }\n  };\n  axios.post(API_URL, body).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: POST_ADDUSER,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log('Failed Adding User ', err.response);\n    dispatch({\n      type: POST_ADDUSER_ERROR,\n      payload: err.response\n    });\n\n    if (err.response !== undefined) {\n      if (err.response.data.errors.email !== undefined && err.response.data.errors.username !== undefined && err.response.data.errors.mobileno !== undefined) {\n        Swal.fire('Email,Username,Mobileno ', err.response.data.errors.email);\n      }\n\n      if (err.response.data.errors.email !== undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Email', err.response.data.errors.email);\n      }\n\n      if (err.response.data.errors.email === undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Username', err.response.data.errors.username);\n      }\n    }\n  });\n}; //userScreen getAllUserData\n\nexport const getAllUsersDetails = () => dispatch => {\n  const API_URL = `${devURLTnega}api/allusers`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_ALL_USERS_DETAILS,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n}; //mis report data\n\nexport const misReport = () => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_MIS_REPORT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n}; //get batch verification by id\n\nexport const batchVerify = id => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_MIS_REPORT_BY_ID,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const getZones = () => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getallzone`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_ZONES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const getDistrict = id => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getdistrictzone/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_DISTRICT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const getSROList = id => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getsroname/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_SRO_BY_DISTRICT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const addUser = data => dispatch => {\n  console.log('sdatga -- ', data);\n  return;\n  const API_URL = `${devURLTnega}api/adduser`;\n  const body = {// \"user\": {\n    //     \"username\" : \"pkthakur02\",\n    //     \"email\": \"prakashpusa@gmail.com\",\n    //     \"mobile\" : \"+919931021948\",\n    //     \"role\" : \"SRO\",\n    //     \"zone\" : \"testZone\",\n    //     \"sub_reg_ofc\" : \"Test Sub registrat Office\",\n    //     \"designation\" : \"test designation\",\n    //     \"district\": \"CHENNAI\"\n    // }\n  };\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: ADD_USER,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n  });\n};\nexport const sendDataToRedux = data => dispatch => {\n  dispatch({\n    type: BATCH_REPORT_ROW,\n    payload: data\n  });\n};\nexport const updateStatus = (id, status) => dispatch => {\n  const token = localStorage.getItem('auth_token');\n  console.log('auth_token', token);\n  const API_URL = `${devURLTnega}api/user/updatestatus/${id}`;\n  axios.put(API_URL, {\n    status: status === 'Inactive' ? 'Active' : 'Inactive'\n  }, {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: UPDATE_STATUS,\n      payload: response\n    });\n    MySwal.fire(response.message); // }\n  }).catch(err => {\n    //console.log('Unable to block user ', err.response.data.errors.error.message)\n    MySwal.fire('Unable to block user. Error Message: ', err.response.data.errors.error.message);\n    console.log(err);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/store/Admin/action.js"],"names":["devUrl","devURLTnega","GET_BATCH_UPLOAD_LIST","GET_BATCH_UPLOAD_LIST_BY_ID","UPDATE_STATUS","GET_CITY_NAMES","GET_REPORT_TYPE","GET_STATE_NAMES","GET_USER_DEPARTMENTS","GET_USER_PREVILEGES","GET_USER_ROLE_LIST","POST_USER_ROLES","SET_ROUTING_NAME","POST_ADDUSER_DETAILS","POST_ADDUSER","POST_ADDUSER_ERROR","GET_ALL_USERS_DETAILS","GET_MIS_REPORT","GET_MIS_REPORT_BY_ID","GET_ALL_ZONES","GET_ALL_DISTRICT","GET_SRO_BY_DISTRICT","ADD_USER","BATCH_REPORT_ROW","Swal","withReactContent","axios","BatchId","dispatch","MySwal","authtoken","setRoutingName","data","type","payload","user_privileges","API_URL","get","headers","Authorization","then","res","response","console","log","catch","err","getUserDept","getUserRole_ReportType","createUserRole","body","role_id","status_id","parseInt","role_name","department_ids","description","creation_date","deactivation_date","privileges","sanction_transaction_min","sanction_transaction_max","transaction_auth_limit_min","transaction_auth_limit_max","data_upload_access_upload","data_upload_access_download","remarks","report_types","reports_name","post","fire","error","user_roles_list","get_citys","get_state","getBatchUploadData","localStorage","getItem","getBatchUploadDataByID","id","addUserApi","user","username","name","email","designation","mobile","zone","role","sub_reg_ofc","address","district","undefined","errors","mobileno","getAllUsersDetails","misReport","batchVerify","getZones","getDistrict","getSROList","addUser","sendDataToRedux","updateStatus","status","token","put","message"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,wBAApC;AACA,SACEC,qBADF,EAEEC,2BAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,mBARF,EASEC,kBATF,EAUEC,eAVF,EAWEC,gBAXF,EAYEC,oBAZF,EAaEC,YAbF,EAcEC,kBAdF,EAeEC,qBAfF,EAgBEC,cAhBF,EAiBEC,oBAjBF,EAkBEC,aAlBF,EAmBEC,gBAnBF,EAoBEC,mBApBF,EAqBEC,QArBF,EAsBEC,gBAtBF,QAuBO,SAvBP;AAwBA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,MAAMC,MAAM,GAAGJ,gBAAgB,CAACD,IAAD,CAA/B;KAAMK,M;AAEN,IAAIC,SAAS,GAAG,gCAAhB;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAWJ,QAAD,IAAc;AACpD,MAAII,IAAI,IAAI,EAAZ,EAAgBJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAErB,gBAAR;AAA0BsB,IAAAA,OAAO,EAAEF;AAAnC,GAAD,CAAR;AACjB,CAFM;AAIP,OAAO,MAAMG,eAAe,GAAG,MAAOP,QAAD,IAAc;AACjD,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,oBAA1B;AACA0B,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT,SADpB,CAC+B;;AAD/B;AADG,GADhB,EAMGU,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEQ;AAAtC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAMC,WAAW,GAAG,MAAOnB,QAAD,IAAc;AAC7C,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,aAA1B;AACA0B,EAAAA,KAAK,CAACU,OAAD,EAAU;AACbE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADI,GAAV,CAAL,CAKGU,IALH,CAKSC,GAAD,IAASA,GAAG,CAACT,IALrB,EAMGQ,IANH,CAMSE,QAAD,IACJd,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEzB,oBAAR;AAA8B0B,IAAAA,OAAO,EAAEQ;AAAvC,GAAD,CAPZ,EASGG,KATH,CASUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CATlB;AAUD,CAZM,C,CAcP;;AACA,OAAO,MAAME,sBAAsB,GAAG,MAAOpB,QAAD,IAAc;AACxD,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,cAA1B;AACA0B,EAAAA,KAAK,CAACU,OAAD,EAAU;AACbE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADI,GAAV,CAAL,CAKGU,IALH,CAKSC,GAAD,IAASA,GAAG,CAACT,IALrB,EAMGQ,IANH,CAMSE,QAAD,IAAcd,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE3B,eAAR;AAAyB4B,IAAAA,OAAO,EAAEQ;AAAlC,GAAD,CAN9B,EAOGG,KAPH,CAOUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAPlB;AAQD,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAIjB,IAAD,IAAWJ,QAAD,IAAc;AACpD,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,iCAA1B,CADoD,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMkD,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAEnB,IAAI,CAACmB,OADH;AAEXC,IAAAA,SAAS,EAAEC,QAAQ,CAACrB,IAAI,CAACoB,SAAN,CAFR;AAGXE,IAAAA,SAAS,EAAEtB,IAAI,CAACsB,SAHL;AAIXC,IAAAA,cAAc,EAAEvB,IAAI,CAACuB,cAJV;AAKXC,IAAAA,WAAW,EAAExB,IAAI,CAACwB,WALP;AAMXC,IAAAA,aAAa,EAAEzB,IAAI,CAACyB,aANT;AAOXC,IAAAA,iBAAiB,EAAE1B,IAAI,CAAC0B,iBAPb;AAQXC,IAAAA,UAAU,EAAE3B,IAAI,CAAC2B,UARN;AASXC,IAAAA,wBAAwB,EAAE5B,IAAI,CAAC4B,wBATpB;AAUXC,IAAAA,wBAAwB,EAAE7B,IAAI,CAAC6B,wBAVpB;AAWXC,IAAAA,0BAA0B,EAAE9B,IAAI,CAAC8B,0BAXtB;AAYXC,IAAAA,0BAA0B,EAAE/B,IAAI,CAAC+B,0BAZtB;AAaXC,IAAAA,yBAAyB,EAAEhC,IAAI,CAACgC,yBAbrB;AAcXC,IAAAA,2BAA2B,EAAEjC,IAAI,CAACiC,2BAdvB;AAeXC,IAAAA,OAAO,EAAElC,IAAI,CAACkC,OAfH;AAgBX;AACAC,IAAAA,YAAY,EAAEnC,IAAI,CAACoC;AAjBR,GAAb;AAmBAzB,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EA/DoD,CAgEpD;;AACAxB,EAAAA,KAAK,CACF2C,IADH,CACQjC,OADR,EACiBc,IADjB,EACuB;AACnBZ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADU,GADvB,EAMGU,IANH,CAMSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEtB,eAAR;AAAyBuB,MAAAA,OAAO,EAAEQ,QAAQ,CAACV;AAA3C,KAAD,CAAR;AACAH,IAAAA,MAAM,CAACyC,IAAP,CAAY,oBAAZ,EAAkC,WAAlC,EAA+C,SAA/C,EAJkB,CAKlB;AACD,GAZH,EAaGzB,KAbH,CAaUC,GAAD,IAAS;AACdjB,IAAAA,MAAM,CAACyC,IAAP,CAAY,oBAAZ,EAAkCxB,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkBuC,KAApD,EAA2D,OAA3D;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,GAAG,CAACJ,QAA5B,EAFc,CAGd;AACD,GAjBH;AAkBD,CAnFM;AAqFP,OAAO,MAAM8B,eAAe,GAAG,MAAO5C,QAAD,IAAc;AACjD,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,iCAA1B;AACA0B,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADG,GADhB,EAMGU,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEvB,kBAAR;AAA4BwB,MAAAA,OAAO,EAAEQ;AAArC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AACA,OAAO,MAAM2B,SAAS,GAAG,MAAO7C,QAAD,IAAc;AAC3C,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,QAA1B;AACA0B,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADG,GADhB,EAMGU,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE5B,cAAR;AAAwB6B,MAAAA,OAAO,EAAEQ;AAAjC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AACA,OAAO,MAAM4B,SAAS,GAAG,MAAO9C,QAAD,IAAc;AAC3C,QAAMQ,OAAO,GAAI,GAAEpC,MAAO,OAA1B;AACA0B,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADG,GADhB,EAMGU,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE1B,eAAR;AAAyB2B,MAAAA,OAAO,EAAEQ;AAAlC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AAEA,OAAO,MAAM6B,kBAAkB,GAAG,MAAO/C,QAAD,IAAc;AACpD,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,2BAA/B;AACAyB,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE/B,qBAAR;AAA+BgC,MAAAA,OAAO,EAAEQ;AAAxC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAMoC,sBAAsB,GAAIC,EAAD,IAASnD,QAAD,IAAc;AAC1D,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,6BAA4B8E,EAAG,EAA9D;AACArD,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE9B,2BAAR;AAAqC+B,MAAAA,OAAO,EAAEQ;AAA9C,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AAEA,OAAO,MAAMsC,UAAU,GAAIhD,IAAD,IAAWJ,QAAD,IAAc;AAChDe,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EADgD,CAEhD;;AACA,QAAMI,OAAO,GAAI,GAAEnC,WAAY,aAA/B;AAEA,QAAMiD,IAAI,GAAG;AACX+B,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAElD,IAAI,CAACmD,IADX;AAEJC,MAAAA,KAAK,EAAEpD,IAAI,CAACoD,KAFR;AAGJC,MAAAA,WAAW,EAAErD,IAAI,CAACqD,WAHd;AAIJC,MAAAA,MAAM,EAAEtD,IAAI,CAACsD,MAJT;AAKJC,MAAAA,IAAI,EAAEvD,IAAI,CAACuD,IALP;AAMJC,MAAAA,IAAI,EAAExD,IAAI,CAACwD,IANP;AAOJC,MAAAA,WAAW,EAAEzD,IAAI,CAACyD,WAPd;AASJC,MAAAA,OAAO,EAAE,MATL;AAUJC,MAAAA,QAAQ,EAAE3D,IAAI,CAAC2D;AAVX;AADK,GAAb;AAeAjE,EAAAA,KAAK,CACF2C,IADH,CACQjC,OADR,EACiBc,IADjB,EAEGV,IAFH,CAESC,GAAD,IAAS;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACT,IAAhB;AAEAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEnB,YAAR;AAAsBoB,MAAAA,OAAO,EAAEO,GAAG,CAACT;AAAnC,KAAD,CAAR;AACD,GANH,EAOGa,KAPH,CAOUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,GAAG,CAACJ,QAAvC;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAElB,kBAAR;AAA4BmB,MAAAA,OAAO,EAAEY,GAAG,CAACJ;AAAzC,KAAD,CAAR;;AACA,QAAGI,GAAG,CAACJ,QAAJ,KAAiBkD,SAApB,EAA8B;AAC9B,UAAI9C,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBT,KAAzB,KAAoCQ,SAApC,IAAiD9C,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBX,QAAzB,KAAsCU,SAAvF,IAAoG9C,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBC,QAAzB,KAAsCF,SAA9I,EAAyJ;AACvJpE,QAAAA,IAAI,CAAC8C,IAAL,CAAU,0BAAV,EAAsCxB,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBT,KAA/D;AACD;;AACD,UAAItC,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBT,KAAzB,KAAoCQ,SAApC,IAAiD9C,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBX,QAAzB,KAAsCU,SAA3F,EAAsG;AACpGpE,QAAAA,IAAI,CAAC8C,IAAL,CAAU,OAAV,EAAmBxB,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBT,KAA5C;AACD;;AACD,UAAItC,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBT,KAAzB,KAAoCQ,SAApC,IAAiD9C,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBX,QAAzB,KAAsCU,SAA3F,EAAsG;AACpGpE,QAAAA,IAAI,CAAC8C,IAAL,CAAU,UAAV,EAAsBxB,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBX,QAA/C;AACD;AACA;AAEF,GAtBH;AAuBD,CA3CM,C,CA6CP;;AAEA,OAAO,MAAMa,kBAAkB,GAAG,MAAOnE,QAAD,IAAc;AACpD,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,cAA/B;AACAyB,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEjB,qBAAR;AAA+BkB,MAAAA,OAAO,EAAEQ;AAAxC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AAEA,OAAO,MAAMsD,SAAS,GAAG,MAAOpE,QAAD,IAAc;AAC3C,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,iCAA/B;AACAyB,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEhB,cAAR;AAAwBiB,MAAAA,OAAO,EAAEQ;AAAjC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM,C,CAoBP;;AAEA,OAAO,MAAMuD,WAAW,GAAIlB,EAAD,IAASnD,QAAD,IAAc;AAC/C,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,mCAAkC8E,EAAG,EAApE;AACArD,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEf,oBAAR;AAA8BgB,MAAAA,OAAO,EAAEQ;AAAvC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAMwD,QAAQ,GAAG,MAAOtE,QAAD,IAAc;AAC1C,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,uBAA/B;AACAyB,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEd,aAAR;AAAuBe,MAAAA,OAAO,EAAEQ;AAAhC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAMyD,WAAW,GAAIpB,EAAD,IAASnD,QAAD,IAAc;AAC/C,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,8BAA6B8E,EAAG,EAA/D;AACArD,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,MAAAA,OAAO,EAAEQ;AAAnC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAM0D,UAAU,GAAIrB,EAAD,IAASnD,QAAD,IAAc;AAC9C,QAAMQ,OAAO,GAAI,GAAEnC,WAAY,yBAAwB8E,EAAG,EAA1D;AACArD,EAAAA,KAAK,CACFW,GADH,CACOD,OADP,EACgB;AACZE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYqC,YAAY,CAACC,OAAb,CAAqB,YAArB;AADpB;AADG,GADhB,EAMGrC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,mBAAR;AAA6Ba,MAAAA,OAAO,EAAEQ;AAAtC,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAM2D,OAAO,GAAIrE,IAAD,IAAWJ,QAAD,IAAc;AAC7Ce,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,IAA1B;AACA;AACA,QAAMI,OAAO,GAAI,GAAEnC,WAAY,aAA/B;AACA,QAAMiD,IAAI,GAAG,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW,GAAb;AAYAxB,EAAAA,KAAK,CACF2C,IADH,CACQjC,OADR,EACiBc,IADjB,EACuB;AACnBZ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYT;AADpB;AADU,GADvB,EAMGU,IANH,CAMSC,GAAD,IAASA,GAAG,CAACT,IANrB,EAOGQ,IAPH,CAOSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,QAAR;AAAkBY,MAAAA,OAAO,EAAEQ;AAA3B,KAAD,CAAR,CAHkB,CAIlB;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAhB;AACD,GAfH;AAgBD,CAhCM;AAkCP,OAAO,MAAM4D,eAAe,GAAItE,IAAD,IAAWJ,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEV,gBAAR;AAA0BW,IAAAA,OAAO,EAAEF;AAAnC,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMuE,YAAY,GAAG,CAACxB,EAAD,EAAKyB,MAAL,KAAiB5E,QAAD,IAAc;AACxD,QAAM6E,KAAK,GAAG7B,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AACAlC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B6D,KAA1B;AAEA,QAAMrE,OAAO,GAAI,GAAEnC,WAAY,yBAAwB8E,EAAG,EAA1D;AACArD,EAAAA,KAAK,CACFgF,GADH,CAEItE,OAFJ,EAGI;AACEoE,IAAAA,MAAM,EAAEA,MAAM,KAAK,UAAX,GAAwB,QAAxB,GAAmC;AAD7C,GAHJ,EAMI;AACElE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYkE;AADpB;AADX,GANJ,EAYGjE,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACT,IAZrB,EAaGQ,IAbH,CAaSE,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB,EADkB,CAElB;;AACAd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE7B,aAAR;AAAuB8B,MAAAA,OAAO,EAAEQ;AAAhC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACyC,IAAP,CAAY5B,QAAQ,CAACiE,OAArB,EAJkB,CAKlB;AACD,GAnBH,EAoBG9D,KApBH,CAoBUC,GAAD,IAAS;AACd;AACAjB,IAAAA,MAAM,CAACyC,IAAP,CACE,uCADF,EAEExB,GAAG,CAACJ,QAAJ,CAAaV,IAAb,CAAkB6D,MAAlB,CAAyBtB,KAAzB,CAA+BoC,OAFjC;AAIAhE,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GA3BH;AA4BD,CAjCM","sourcesContent":["import { devUrl, devURLTnega } from '../../utilities/config'\nimport {\n  GET_BATCH_UPLOAD_LIST,\n  GET_BATCH_UPLOAD_LIST_BY_ID,\n  UPDATE_STATUS,\n  GET_CITY_NAMES,\n  GET_REPORT_TYPE,\n  GET_STATE_NAMES,\n  GET_USER_DEPARTMENTS,\n  GET_USER_PREVILEGES,\n  GET_USER_ROLE_LIST,\n  POST_USER_ROLES,\n  SET_ROUTING_NAME,\n  POST_ADDUSER_DETAILS,\n  POST_ADDUSER,\n  POST_ADDUSER_ERROR,\n  GET_ALL_USERS_DETAILS,\n  GET_MIS_REPORT,\n  GET_MIS_REPORT_BY_ID,\n  GET_ALL_ZONES,\n  GET_ALL_DISTRICT,\n  GET_SRO_BY_DISTRICT,\n  ADD_USER,\n  BATCH_REPORT_ROW,\n} from './types'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport axios from 'axios'\nimport BatchId from '../../Pages/RegistrationPortal/BatchId/BatchId'\nimport { dispatch } from 'd3'\nconst MySwal = withReactContent(Swal)\n\nlet authtoken = 'p13orL5Za5AM1vgYNckreM74Hk10gs'\n\nexport const setRoutingName = (data) => (dispatch) => {\n  if (data != '') dispatch({ type: SET_ROUTING_NAME, payload: data })\n}\n\nexport const user_privileges = () => (dispatch) => {\n  const API_URL = `${devUrl}module-privileges/`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_USER_PREVILEGES, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\nexport const getUserDept = () => (dispatch) => {\n  const API_URL = `${devUrl}department/`\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken,\n    },\n  })\n    .then((res) => res.data)\n    .then((response) =>\n      dispatch({ type: GET_USER_DEPARTMENTS, payload: response }),\n    )\n    .catch((err) => console.log(err))\n}\n\n// report-type\nexport const getUserRole_ReportType = () => (dispatch) => {\n  const API_URL = `${devUrl}report-type/`\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken,\n    },\n  })\n    .then((res) => res.data)\n    .then((response) => dispatch({ type: GET_REPORT_TYPE, payload: response }))\n    .catch((err) => console.log(err))\n}\n\nexport const createUserRole = (data) => (dispatch) => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`\n  //     const body ={\n  // \"role_id\": \"SG0003\",\n  // \"status_id\": 1,\n  // \"role_name\": \"Manger\",\n  // \"department_ids\": [1],\n  // \"description\": \"test descr hai\",\n  // \"creation_date\": \"2021-12-19\",\n  // \"deactivation_date\": \"2022-12-19\",\n  // \"sanction_transaction_min\": \"100\",\n  // \"sanction_transaction_max\": \"50000\",\n  // \"transaction_auth_limit_min\": \"400\",\n  // \"transaction_auth_limit_max\": \"50000\",\n  // \"data_upload_access_upload\" : \"True\",\n  // \"data_upload_access_download\" : \"True\",\n  // \"remarks\" : data.remarks,\n  // \"reports_name_id\" : 2,\n  // \"privileges\": {\n  // \t\"1\": [1,2],\n  //     \"3\": [2, 4]\n  // }\n  // }\n  // const body = {\n  //     \"role_id\":  data.role_id,\n  //     \"status_id\": 1,\n  //     \"role_name\": data.role_name,\n  //     \"department_ids\": data.department_ids,\n  //     \"description\":  data.description,\n  //     \"creation_date\": data.creation_date,\n  //     \"deactivation_date\": data.deactivation_date,\n  //     \"sanction_transaction_min\": data.sanction_transaction_min,\n  //     \"sanction_transaction_max\": data.sanction_transaction_max,\n  //     \"transaction_auth_limit_min\": data.transaction_auth_limit_min,\n  //     \"transaction_auth_limit_max\": data.transaction_auth_limit_max,\n  //     \"data_upload_access_upload\" : \"True\",\n  //     \"data_upload_access_download\" : \"True\",\n  //     \"remarks\" : data.remarks,\n  //     \"reports_name_id\" :2,\n  //     // data.reports_name,\n  //     \"privileges\": {\n  //         \"1\": [1,2]\n  //     }\n  //     }\n  const body = {\n    role_id: data.role_id,\n    status_id: parseInt(data.status_id),\n    role_name: data.role_name,\n    department_ids: data.department_ids,\n    description: data.description,\n    creation_date: data.creation_date,\n    deactivation_date: data.deactivation_date,\n    privileges: data.privileges,\n    sanction_transaction_min: data.sanction_transaction_min,\n    sanction_transaction_max: data.sanction_transaction_max,\n    transaction_auth_limit_min: data.transaction_auth_limit_min,\n    transaction_auth_limit_max: data.transaction_auth_limit_max,\n    data_upload_access_upload: data.data_upload_access_upload,\n    data_upload_access_download: data.data_upload_access_download,\n    remarks: data.remarks,\n    // remark_history:'',\n    report_types: data.reports_name,\n  }\n  console.log(body)\n  // return;\n  axios\n    .post(API_URL, body, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken,\n      },\n    })\n    .then((response) => {\n      console.log('user - role -- ', response)\n      // if(response.status===200){\n      dispatch({ type: POST_USER_ROLES, payload: response.data })\n      MySwal.fire('User Role Creation', 'Completed', 'success')\n      // }\n    })\n    .catch((err) => {\n      MySwal.fire('User Role Creation', err.response.data.error, 'error')\n      console.log('Error-> ', err.response)\n      // dispatch({type:FETCH_TRADE_LIST, payload:err.response.data})\n    })\n}\n\nexport const user_roles_list = () => (dispatch) => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken,\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_USER_ROLE_LIST, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\n//New integration of 2022\nexport const get_citys = () => (dispatch) => {\n  const API_URL = `${devUrl}state/`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken,\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_CITY_NAMES, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\n//\nexport const get_state = () => (dispatch) => {\n  const API_URL = `${devUrl}city/`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken,\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_STATE_NAMES, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\n//Admin APIs\n\nexport const getBatchUploadData = () => (dispatch) => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_BATCH_UPLOAD_LIST, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const getBatchUploadDataByID = (id) => (dispatch) => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/${id}`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_BATCH_UPLOAD_LIST_BY_ID, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\n//adduser\n\nexport const addUserApi = (data) => (dispatch) => {\n  console.log(data)\n  // return;\n  const API_URL = `${devURLTnega}api/adduser`\n\n  const body = {\n    user: {\n      username: data.name,\n      email: data.email,\n      designation: data.designation,\n      mobile: data.mobile,\n      zone: data.zone,\n      role: data.role,\n      sub_reg_ofc: data.sub_reg_ofc,\n\n      address: 'test',\n      district: data.district,\n    },\n  }\n\n  axios\n    .post(API_URL, body)\n    .then((res) => {\n      console.log(res.data)\n\n      dispatch({ type: POST_ADDUSER, payload: res.data })\n    })\n    .catch((err) => {\n      console.log('Failed Adding User ', err.response)\n      dispatch({ type: POST_ADDUSER_ERROR, payload: err.response })\n      if(err.response !== undefined){\n      if (err.response.data.errors.email !==  undefined && err.response.data.errors.username !== undefined && err.response.data.errors.mobileno !== undefined) {\n        Swal.fire('Email,Username,Mobileno ', err.response.data.errors.email)\n      }\n      if (err.response.data.errors.email !==  undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Email', err.response.data.errors.email)\n      }\n      if (err.response.data.errors.email ===  undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Username', err.response.data.errors.username)\n      }\n      }\n\n    })\n}\n\n//userScreen getAllUserData\n\nexport const getAllUsersDetails = () => (dispatch) => {\n  const API_URL = `${devURLTnega}api/allusers`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_ALL_USERS_DETAILS, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\n//mis report data\n\nexport const misReport = () => (dispatch) => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==200){\n      dispatch({ type: GET_MIS_REPORT, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\n//get batch verification by id\n\nexport const batchVerify = (id) => (dispatch) => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: GET_MIS_REPORT_BY_ID, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const getZones = () => (dispatch) => {\n  const API_URL = `${devURLTnega}api/master/getallzone`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: GET_ALL_ZONES, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const getDistrict = (id) => (dispatch) => {\n  const API_URL = `${devURLTnega}api/master/getdistrictzone/${id}`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: GET_ALL_DISTRICT, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const getSROList = (id) => (dispatch) => {\n  const API_URL = `${devURLTnega}api/master/getsroname/${id}`\n  axios\n    .get(API_URL, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: GET_SRO_BY_DISTRICT, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const addUser = (data) => (dispatch) => {\n  console.log('sdatga -- ', data)\n  return\n  const API_URL = `${devURLTnega}api/adduser`\n  const body = {\n    // \"user\": {\n    //     \"username\" : \"pkthakur02\",\n    //     \"email\": \"prakashpusa@gmail.com\",\n    //     \"mobile\" : \"+919931021948\",\n    //     \"role\" : \"SRO\",\n    //     \"zone\" : \"testZone\",\n    //     \"sub_reg_ofc\" : \"Test Sub registrat Office\",\n    //     \"designation\" : \"test designation\",\n    //     \"district\": \"CHENNAI\"\n    // }\n  }\n  axios\n    .post(API_URL, body, {\n      headers: {\n        Authorization: 'Bearer ' + authtoken,\n      },\n    })\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: ADD_USER, payload: response })\n      // }\n    })\n    .catch((err) => {\n      console.log(err.response)\n    })\n}\n\nexport const sendDataToRedux = (data) => (dispatch) => {\n  dispatch({ type: BATCH_REPORT_ROW, payload: data })\n}\n\nexport const updateStatus = (id, status) => (dispatch) => {\n  const token = localStorage.getItem('auth_token')\n  console.log('auth_token', token)\n\n  const API_URL = `${devURLTnega}api/user/updatestatus/${id}`\n  axios\n    .put(\n      API_URL,\n      {\n        status: status === 'Inactive' ? 'Active' : 'Inactive',\n      },\n      {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      },\n    )\n    .then((res) => res.data)\n    .then((response) => {\n      console.log('200 - ', response)\n      // if(response.status==true){\n      dispatch({ type: UPDATE_STATUS, payload: response })\n      MySwal.fire(response.message)\n      // }\n    })\n    .catch((err) => {\n      //console.log('Unable to block user ', err.response.data.errors.error.message)\n      MySwal.fire(\n        'Unable to block user. Error Message: ',\n        err.response.data.errors.error.message,\n      )\n      console.log(err)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}