{"ast":null,"code":"import { devUrl, devURLTnega } from '../../utilities/config';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { GET_BATCH_UPLOAD_LIST, GET_BATCH_UPLOAD_LIST_BY_ID, UPDATE_STATUS, GET_CITY_NAMES, GET_REPORT_TYPE, GET_STATE_NAMES, GET_USER_DEPARTMENTS, GET_USER_PREVILEGES, GET_USER_ROLE_LIST, POST_USER_ROLES, SET_ROUTING_NAME, POST_ADDUSER_DETAILS, POST_ADDUSER, POST_ADDUSER_ERROR, GET_ALL_USERS_DETAILS, GET_MIS_REPORT, GET_MIS_REPORT_BY_ID, GET_ALL_ZONES, GET_ALL_DISTRICT, GET_DOCUMENT_INDEX, GET_SRO_BY_DISTRICT, ADD_USER, GET_USER_DATA, BATCH_REPORT_ROW, GET_VIEWDOC, GET_SEARCH_DATA, GET_RANGE_SEARCH_DATA, GET_SEARCH_DATA_ING, GET_RANGE_SEARCH_DATA_ING, LOGOUT_DATA } from './types';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport axios from 'axios';\nimport BatchId from '../../Pages/RegistrationPortal/BatchId/BatchId';\nimport { dispatch } from 'd3';\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nlet authtoken = localStorage.getItem('auth_token');\nconsole.log(authtoken);\nexport const setRoutingName = data => dispatch => {\n  if (data != '') dispatch({\n    type: SET_ROUTING_NAME,\n    payload: data\n  });\n};\nexport const user_privileges = () => dispatch => {\n  const API_URL = `${devUrl}module-privileges/`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_USER_PREVILEGES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.refresh_token\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const viewDocument = data => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/gettiff`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.post(API_URL, data, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_VIEWDOC,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.refresh_token\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getUserDept = () => dispatch => {\n  const API_URL = `${devUrl}department/`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => dispatch({\n    type: GET_USER_DEPARTMENTS,\n    payload: response\n  })).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.refresh_token\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; // report-type\n\nexport const getUserRole_ReportType = () => dispatch => {\n  const API_URL = `${devUrl}report-type/`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => dispatch({\n    type: GET_REPORT_TYPE,\n    payload: response\n  })).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.refresh_token\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const createUserRole = data => dispatch => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`;\n  const refresh = localStorage.getItem('refresh_token'); //     const body ={\n  // \"role_id\": \"SG0003\",\n  // \"status_id\": 1,\n  // \"role_name\": \"Manger\",\n  // \"department_ids\": [1],\n  // \"description\": \"test descr hai\",\n  // \"creation_date\": \"2021-12-19\",\n  // \"deactivation_date\": \"2022-12-19\",\n  // \"sanction_transaction_min\": \"100\",\n  // \"sanction_transaction_max\": \"50000\",\n  // \"transaction_auth_limit_min\": \"400\",\n  // \"transaction_auth_limit_max\": \"50000\",\n  // \"data_upload_access_upload\" : \"True\",\n  // \"data_upload_access_download\" : \"True\",\n  // \"remarks\" : data.remarks,\n  // \"reports_name_id\" : 2,\n  // \"privileges\": {\n  // \t\"1\": [1,2],\n  //     \"3\": [2, 4]\n  // }\n  // }\n  // const body = {\n  //     \"role_id\":  data.role_id,\n  //     \"status_id\": 1,\n  //     \"role_name\": data.role_name,\n  //     \"department_ids\": data.department_ids,\n  //     \"description\":  data.description,\n  //     \"creation_date\": data.creation_date,\n  //     \"deactivation_date\": data.deactivation_date,\n  //     \"sanction_transaction_min\": data.sanction_transaction_min,\n  //     \"sanction_transaction_max\": data.sanction_transaction_max,\n  //     \"transaction_auth_limit_min\": data.transaction_auth_limit_min,\n  //     \"transaction_auth_limit_max\": data.transaction_auth_limit_max,\n  //     \"data_upload_access_upload\" : \"True\",\n  //     \"data_upload_access_download\" : \"True\",\n  //     \"remarks\" : data.remarks,\n  //     \"reports_name_id\" :2,\n  //     // data.reports_name,\n  //     \"privileges\": {\n  //         \"1\": [1,2]\n  //     }\n  //     }\n\n  const body = {\n    role_id: data.role_id,\n    status_id: parseInt(data.status_id),\n    role_name: data.role_name,\n    department_ids: data.department_ids,\n    description: data.description,\n    creation_date: data.creation_date,\n    deactivation_date: data.deactivation_date,\n    privileges: data.privileges,\n    sanction_transaction_min: data.sanction_transaction_min,\n    sanction_transaction_max: data.sanction_transaction_max,\n    transaction_auth_limit_min: data.transaction_auth_limit_min,\n    transaction_auth_limit_max: data.transaction_auth_limit_max,\n    data_upload_access_upload: data.data_upload_access_upload,\n    data_upload_access_download: data.data_upload_access_download,\n    remarks: data.remarks,\n    // remark_history:'',\n    report_types: data.reports_name\n  };\n  console.log(body); // return;\n\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(response => {\n    console.log('user - role -- ', response); // if(response.status===200){\n\n    dispatch({\n      type: POST_USER_ROLES,\n      payload: response.data\n    });\n    MySwal.fire('User Role Creation', 'Completed', 'success'); // }\n  }).catch(err => {\n    MySwal.fire('User Role Creation', err.response.data.error, 'error');\n    console.log('Error-> ', err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    } // dispatch({type:FETCH_TRADE_LIST, payload:err.response.data})\n\n  });\n};\nexport const user_roles_list = () => dispatch => {\n  const API_URL = `${devUrl}api/users/role/?department_id=1`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_USER_ROLE_LIST,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //New integration of 2022\n\nexport const get_citys = () => dispatch => {\n  const API_URL = `${devUrl}state/`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_CITY_NAMES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //\n\nexport const get_state = () => dispatch => {\n  const API_URL = `${devUrl}city/`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_STATE_NAMES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //Admin APIs\n\nexport const getBatchUploadData = (data, data1) => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload?pageNo=${data}&size=${data1}`;\n  const refresh = localStorage.getItem('refresh_token');\n  console.log(API_URL);\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_BATCH_UPLOAD_LIST,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      console.log(localStorage);\n      const data = {\n        refreshToken: refresh\n      };\n      console.log(data);\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getBatchUploadDataByID = id => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_BATCH_UPLOAD_LIST_BY_ID,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //adduser\n\nexport const addUserApi = data => dispatch => {\n  console.log(data); // return;\n\n  const API_URL = `${devURLTnega}api/adduser`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.post(API_URL, data, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: POST_ADDUSER,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log('Failed Adding User ', err.response);\n    dispatch({\n      type: POST_ADDUSER_ERROR,\n      payload: err.response\n    });\n\n    if (err.response !== undefined) {\n      if (err.response.data.errors.email !== undefined && err.response.data.errors.username !== undefined && err.response.data.errors.mobileno !== undefined) {\n        Swal.fire('Email,Username,Mobileno ', err.response.data.errors.email);\n      }\n\n      if (err.response.data.errors.email !== undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Email', err.response.data.errors.email);\n      }\n\n      if (err.response.data.errors.email === undefined && err.response.data.errors.username === undefined) {\n        Swal.fire('Username', err.response.data.errors.username);\n      }\n    }\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //userScreen getAllUserData\n\nexport const getAllUsersDetails = () => dispatch => {\n  const API_URL = `${devURLTnega}api/allusers`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_ALL_USERS_DETAILS,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getUserData = id => dispatch => {\n  const API_URL = `${devURLTnega}api/user/${id}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_USER_DATA,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //mis report data\n\nexport const misReport = (data, data1) => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification?pageNo=${data}&size=${data1}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_MIS_REPORT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //get batch verification by id\n\nexport const batchVerify = id => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_MIS_REPORT_BY_ID,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getZones = () => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getallzone`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_ZONES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getDistrict = id => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getdistrictzone/${id}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_DISTRICT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const documentIndex = (data, data1, data2, data3, data4, data5) => dispatch => {\n  // console.log(data);\n  // console.log(data1);\n  // console.log(data2);\n  // console.log(data3);\n  // console.log(data4);\n  // console.log(data5);\n  const refresh = localStorage.getItem('refresh_token');\n  const API_URL = `${devURLTnega}api/dashboard/documentindex/${data}${data5}${data1}${data2}${data1}${data3}${data1}${data4}`;\n  console.log(API_URL);\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_DOCUMENT_INDEX,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getSROList = id => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getsroname/${id}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_SRO_BY_DISTRICT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const addUser = data => dispatch => {\n  const refresh = localStorage.getItem('refresh_token');\n  console.log('sdatga -- ', data);\n  return;\n  const API_URL = `${devURLTnega}api/adduser`;\n  const body = {// \"user\": {\n    //     \"username\" : \"pkthakur02\",\n    //     \"email\": \"prakashpusa@gmail.com\",\n    //     \"mobile\" : \"+919931021948\",\n    //     \"role\" : \"SRO\",\n    //     \"zone\" : \"testZone\",\n    //     \"sub_reg_ofc\" : \"Test Sub registrat Office\",\n    //     \"designation\" : \"test designation\",\n    //     \"district\": \"CHENNAI\"\n    // }\n  };\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: ADD_USER,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const sendDataToRedux = data => dispatch => {\n  dispatch({\n    type: BATCH_REPORT_ROW,\n    payload: data\n  });\n};\nexport const updateStatus = (id, status) => dispatch => {\n  const refresh = localStorage.getItem('refresh_token');\n  const token = localStorage.getItem('auth_token');\n  console.log('auth_token', token);\n  const API_URL = `${devURLTnega}api/user/updatestatus/${id}`;\n  axios.put(API_URL, {\n    status: status === 'Inactive' ? 'Active' : 'Inactive'\n  }, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response);\n    dispatch({\n      type: UPDATE_STATUS,\n      payload: response\n    });\n    toast.success(response.message); // }\n  }).catch(err => {\n    MySwal.fire('Unable to block user. Error Message: ', err.response.data.errors.error.message);\n    console.log(err);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getSearchData = (id, data, data1) => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/search/${id}?pageNo=${data}&size=${data1}`;\n  const refresh = localStorage.getItem('refresh_token');\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_SEARCH_DATA,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getRangeSearchData = (data, data1, data2, data3) => dispatch => {\n  const refresh = localStorage.getItem('refresh_token');\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/range?startDate=${data}&endDate=${data1}&pageNo=${data2}&size=${data3}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_RANGE_SEARCH_DATA,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getSearchDataIng = (id, data, data1) => dispatch => {\n  const refresh = localStorage.getItem('refresh_token');\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/search/${id}?pageNo=${data}&size=${data1}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_SEARCH_DATA_ING,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getRangeSearchDataIng = (data, data1, data2, data3) => dispatch => {\n  const refresh = localStorage.getItem('refresh_token');\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/range?startDate=${data}&endDate=${data1}&pageNo=${data2}&size=${data3}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_RANGE_SEARCH_DATA_ING,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: refresh\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/store/Admin/action.js"],"names":["devUrl","devURLTnega","toast","GET_BATCH_UPLOAD_LIST","GET_BATCH_UPLOAD_LIST_BY_ID","UPDATE_STATUS","GET_CITY_NAMES","GET_REPORT_TYPE","GET_STATE_NAMES","GET_USER_DEPARTMENTS","GET_USER_PREVILEGES","GET_USER_ROLE_LIST","POST_USER_ROLES","SET_ROUTING_NAME","POST_ADDUSER_DETAILS","POST_ADDUSER","POST_ADDUSER_ERROR","GET_ALL_USERS_DETAILS","GET_MIS_REPORT","GET_MIS_REPORT_BY_ID","GET_ALL_ZONES","GET_ALL_DISTRICT","GET_DOCUMENT_INDEX","GET_SRO_BY_DISTRICT","ADD_USER","GET_USER_DATA","BATCH_REPORT_ROW","GET_VIEWDOC","GET_SEARCH_DATA","GET_RANGE_SEARCH_DATA","GET_SEARCH_DATA_ING","GET_RANGE_SEARCH_DATA_ING","LOGOUT_DATA","Swal","withReactContent","axios","BatchId","dispatch","MySwal","authtoken","localStorage","getItem","console","log","setRoutingName","data","type","payload","user_privileges","API_URL","refresh","get","headers","Authorization","then","res","response","catch","err","status","refreshToken","refresh_token","post","setItem","token","email","clear","message","fire","viewDocument","getUserDept","getUserRole_ReportType","createUserRole","body","role_id","status_id","parseInt","role_name","department_ids","description","creation_date","deactivation_date","privileges","sanction_transaction_min","sanction_transaction_max","transaction_auth_limit_min","transaction_auth_limit_max","data_upload_access_upload","data_upload_access_download","remarks","report_types","reports_name","error","user_roles_list","get_citys","get_state","getBatchUploadData","data1","getBatchUploadDataByID","id","addUserApi","undefined","errors","username","mobileno","getAllUsersDetails","getUserData","misReport","batchVerify","getZones","getDistrict","documentIndex","data2","data3","data4","data5","getSROList","addUser","sendDataToRedux","updateStatus","put","success","getSearchData","getRangeSearchData","getSearchDataIng","getRangeSearchDataIng"],"mappings":"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","sourcesContent":["import { devUrl, devURLTnega } from '../../utilities/config'\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  GET_BATCH_UPLOAD_LIST,\r\n  GET_BATCH_UPLOAD_LIST_BY_ID,\r\n  UPDATE_STATUS,\r\n  GET_CITY_NAMES,\r\n  GET_REPORT_TYPE,\r\n  GET_STATE_NAMES,\r\n  GET_USER_DEPARTMENTS,\r\n  GET_USER_PREVILEGES,\r\n  GET_USER_ROLE_LIST,\r\n  POST_USER_ROLES,\r\n  SET_ROUTING_NAME,\r\n  POST_ADDUSER_DETAILS,\r\n  POST_ADDUSER,\r\n  POST_ADDUSER_ERROR,\r\n  GET_ALL_USERS_DETAILS,\r\n  GET_MIS_REPORT,\r\n  GET_MIS_REPORT_BY_ID,\r\n  GET_ALL_ZONES,\r\n  GET_ALL_DISTRICT,\r\n  GET_DOCUMENT_INDEX,\r\n  GET_SRO_BY_DISTRICT,\r\n  ADD_USER,\r\n  GET_USER_DATA,\r\n  BATCH_REPORT_ROW,\r\n  GET_VIEWDOC,\r\n  GET_SEARCH_DATA,\r\n  GET_RANGE_SEARCH_DATA,\r\n  GET_SEARCH_DATA_ING,\r\n  GET_RANGE_SEARCH_DATA_ING,\r\n  LOGOUT_DATA,\r\n} from './types'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport axios from 'axios'\r\nimport BatchId from '../../Pages/RegistrationPortal/BatchId/BatchId'\r\nimport { dispatch } from 'd3'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nlet authtoken = localStorage.getItem('auth_token')\r\n\r\nconsole.log(authtoken)\r\nexport const setRoutingName = (data) => (dispatch) => {\r\n  if (data != '') dispatch({ type: SET_ROUTING_NAME, payload: data })\r\n}\r\n\r\nexport const user_privileges = () => (dispatch) => {\r\n  const API_URL = `${devUrl}module-privileges/`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_USER_PREVILEGES, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:localStorage.refresh_token\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n            const data={\r\n              email: localStorage.getItem('email_id'),\r\n              refreshToken:localStorage.getItem('refreshToken'),\r\n            }\r\n            axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n            .then((res) => {\r\n              localStorage.clear()\r\n              dispatch({type:LOGOUT_DATA, payload:res})\r\n            })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const viewDocument = (data) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/gettiff`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .post(API_URL, data,{\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_VIEWDOC, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:localStorage.refresh_token\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getUserDept = () => (dispatch) => {\r\n  const API_URL = `${devUrl}department/`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios(API_URL, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + authtoken,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .then((response) =>\r\n      dispatch({ type: GET_USER_DEPARTMENTS, payload: response }),\r\n    )\r\n    .catch((err) => {console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:localStorage.refresh_token\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }})\r\n}\r\n\r\n// report-type\r\nexport const getUserRole_ReportType = () => (dispatch) => {\r\n  const API_URL = `${devUrl}report-type/`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios(API_URL, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + authtoken,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .then((response) => dispatch({ type: GET_REPORT_TYPE, payload: response }))\r\n    .catch((err) => {console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:localStorage.refresh_token\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }})\r\n}\r\n\r\nexport const createUserRole = (data) => (dispatch) => {\r\n  const API_URL = `${devUrl}api/users/role/?department_id=1`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  //     const body ={\r\n  // \"role_id\": \"SG0003\",\r\n  // \"status_id\": 1,\r\n  // \"role_name\": \"Manger\",\r\n  // \"department_ids\": [1],\r\n  // \"description\": \"test descr hai\",\r\n  // \"creation_date\": \"2021-12-19\",\r\n  // \"deactivation_date\": \"2022-12-19\",\r\n  // \"sanction_transaction_min\": \"100\",\r\n  // \"sanction_transaction_max\": \"50000\",\r\n  // \"transaction_auth_limit_min\": \"400\",\r\n  // \"transaction_auth_limit_max\": \"50000\",\r\n  // \"data_upload_access_upload\" : \"True\",\r\n  // \"data_upload_access_download\" : \"True\",\r\n  // \"remarks\" : data.remarks,\r\n  // \"reports_name_id\" : 2,\r\n  // \"privileges\": {\r\n  // \t\"1\": [1,2],\r\n  //     \"3\": [2, 4]\r\n  // }\r\n  // }\r\n  // const body = {\r\n  //     \"role_id\":  data.role_id,\r\n  //     \"status_id\": 1,\r\n  //     \"role_name\": data.role_name,\r\n  //     \"department_ids\": data.department_ids,\r\n  //     \"description\":  data.description,\r\n  //     \"creation_date\": data.creation_date,\r\n  //     \"deactivation_date\": data.deactivation_date,\r\n  //     \"sanction_transaction_min\": data.sanction_transaction_min,\r\n  //     \"sanction_transaction_max\": data.sanction_transaction_max,\r\n  //     \"transaction_auth_limit_min\": data.transaction_auth_limit_min,\r\n  //     \"transaction_auth_limit_max\": data.transaction_auth_limit_max,\r\n  //     \"data_upload_access_upload\" : \"True\",\r\n  //     \"data_upload_access_download\" : \"True\",\r\n  //     \"remarks\" : data.remarks,\r\n  //     \"reports_name_id\" :2,\r\n  //     // data.reports_name,\r\n  //     \"privileges\": {\r\n  //         \"1\": [1,2]\r\n  //     }\r\n  //     }\r\n  const body = {\r\n    role_id: data.role_id,\r\n    status_id: parseInt(data.status_id),\r\n    role_name: data.role_name,\r\n    department_ids: data.department_ids,\r\n    description: data.description,\r\n    creation_date: data.creation_date,\r\n    deactivation_date: data.deactivation_date,\r\n    privileges: data.privileges,\r\n    sanction_transaction_min: data.sanction_transaction_min,\r\n    sanction_transaction_max: data.sanction_transaction_max,\r\n    transaction_auth_limit_min: data.transaction_auth_limit_min,\r\n    transaction_auth_limit_max: data.transaction_auth_limit_max,\r\n    data_upload_access_upload: data.data_upload_access_upload,\r\n    data_upload_access_download: data.data_upload_access_download,\r\n    remarks: data.remarks,\r\n    // remark_history:'',\r\n    report_types: data.reports_name,\r\n  }\r\n  console.log(body)\r\n  // return;\r\n  axios\r\n    .post(API_URL, body, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log('user - role -- ', response)\r\n      // if(response.status===200){\r\n      dispatch({ type: POST_USER_ROLES, payload: response.data })\r\n      MySwal.fire('User Role Creation', 'Completed', 'success')\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      MySwal.fire('User Role Creation', err.response.data.error, 'error')\r\n      console.log('Error-> ', err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n      // dispatch({type:FETCH_TRADE_LIST, payload:err.response.data})\r\n    })\r\n}\r\n\r\nexport const user_roles_list = () => (dispatch) => {\r\n  const API_URL = `${devUrl}api/users/role/?department_id=1`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_USER_ROLE_LIST, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//New integration of 2022\r\nexport const get_citys = () => (dispatch) => {\r\n  const API_URL = `${devUrl}state/`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_CITY_NAMES, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//\r\nexport const get_state = () => (dispatch) => {\r\n  const API_URL = `${devUrl}city/`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_STATE_NAMES, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//Admin APIs\r\n\r\nexport const getBatchUploadData = (data,data1) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchupload?pageNo=${data}&size=${data1}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  console.log(API_URL)\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_BATCH_UPLOAD_LIST, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n        console.log(localStorage)\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        console.log(data)\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getBatchUploadDataByID = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/${id}`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_BATCH_UPLOAD_LIST_BY_ID, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//adduser\r\n\r\nexport const addUserApi = (data) => (dispatch) => {\r\n  console.log(data)\r\n  // return;\r\n  const API_URL = `${devURLTnega}api/adduser`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n\r\n    axios\r\n    .post(API_URL, data,{\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data)\r\n\r\n      dispatch({ type: POST_ADDUSER, payload: res.data })\r\n    })\r\n    .catch((err) => {\r\n      console.log('Failed Adding User ', err.response)\r\n      dispatch({ type: POST_ADDUSER_ERROR, payload: err.response })\r\n      if(err.response !== undefined){\r\n      if (err.response.data.errors.email !==  undefined && err.response.data.errors.username !== undefined && err.response.data.errors.mobileno !== undefined) {\r\n        Swal.fire('Email,Username,Mobileno ', err.response.data.errors.email)\r\n      }\r\n      if (err.response.data.errors.email !==  undefined && err.response.data.errors.username === undefined) {\r\n        Swal.fire('Email', err.response.data.errors.email)\r\n      }\r\n      if (err.response.data.errors.email ===  undefined && err.response.data.errors.username === undefined) {\r\n        Swal.fire('Username', err.response.data.errors.username)\r\n      }\r\n      }\r\n\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//userScreen getAllUserData\r\n\r\nexport const getAllUsersDetails = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/allusers`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_ALL_USERS_DETAILS, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n\r\nexport const getUserData = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/user/${id}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_USER_DATA, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//mis report data\r\n\r\nexport const misReport = (data,data1) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification?pageNo=${data}&size=${data1}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_MIS_REPORT, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n//get batch verification by id\r\n\r\nexport const batchVerify = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_MIS_REPORT_BY_ID, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getZones = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/getallzone`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_ALL_ZONES, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getDistrict = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/getdistrictzone/${id}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_ALL_DISTRICT, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const documentIndex = (data,data1,data2,data3,data4,data5) => (dispatch) => {\r\n  // console.log(data);\r\n  // console.log(data1);\r\n  // console.log(data2);\r\n  // console.log(data3);\r\n  // console.log(data4);\r\n  // console.log(data5);\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  const API_URL = `${devURLTnega}api/dashboard/documentindex/${data}${data5}${data1}${data2}${data1}${data3}${data1}${data4}`\r\n  console.log(API_URL);\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_DOCUMENT_INDEX, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\n\r\nexport const getSROList = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/getsroname/${id}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_SRO_BY_DISTRICT, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const addUser = (data) => (dispatch) => {\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  console.log('sdatga -- ', data)\r\n  return\r\n  const API_URL = `${devURLTnega}api/adduser`\r\n  const body = {\r\n    // \"user\": {\r\n    //     \"username\" : \"pkthakur02\",\r\n    //     \"email\": \"prakashpusa@gmail.com\",\r\n    //     \"mobile\" : \"+919931021948\",\r\n    //     \"role\" : \"SRO\",\r\n    //     \"zone\" : \"testZone\",\r\n    //     \"sub_reg_ofc\" : \"Test Sub registrat Office\",\r\n    //     \"designation\" : \"test designation\",\r\n    //     \"district\": \"CHENNAI\"\r\n    // }\r\n  }\r\n  axios\r\n    .post(API_URL, body, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: ADD_USER, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const sendDataToRedux = (data) => (dispatch) => {\r\n  dispatch({ type: BATCH_REPORT_ROW, payload: data })\r\n}\r\n\r\nexport const updateStatus = (id, status) => (dispatch) => {\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  const token = localStorage.getItem('auth_token')\r\n  console.log('auth_token', token)\r\n\r\n  const API_URL = `${devURLTnega}api/user/updatestatus/${id}`\r\n  axios\r\n    .put(\r\n      API_URL,\r\n      {\r\n        status: status === 'Inactive' ? 'Active' : 'Inactive',\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken,\r\n        },\r\n      },\r\n    )\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      dispatch({ type: UPDATE_STATUS, payload: response })\r\n      toast.success(response.message)\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      MySwal.fire(\r\n        'Unable to block user. Error Message: ',\r\n        err.response.data.errors.error.message,\r\n      )\r\n      console.log(err)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getSearchData = (id,data,data1) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/search/${id}?pageNo=${data}&size=${data1}`\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_SEARCH_DATA, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\nexport const getRangeSearchData = (data,data1,data2,data3) => (dispatch) => {\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  const API_URL = `${devURLTnega}api/dashboard/batchupload/range?startDate=${data}&endDate=${data1}&pageNo=${data2}&size=${data3}`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_RANGE_SEARCH_DATA, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getSearchDataIng = (id,data,data1) => (dispatch) => {\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/search/${id}?pageNo=${data}&size=${data1}`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_SEARCH_DATA_ING, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\nexport const getRangeSearchDataIng = (data,data1,data2,data3) => (dispatch) => {\r\n  const refresh = localStorage.getItem('refresh_token')\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/range?startDate=${data}&endDate=${data1}&pageNo=${data2}&size=${data3}`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + authtoken,\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_RANGE_SEARCH_DATA_ING, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken:refresh\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}