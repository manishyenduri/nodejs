{"ast":null,"code":"import axios from 'axios';\nimport { devURLTnega } from '../../utilities/config';\nimport { POST_LOGIN, POST_LOGIN_ERROR, OTP_VERIFY, OTP_VERIFY_ERROR, LOGOUT_DATA, GET_USER, GET_ALL_MASTER_DATA, UPDATE_STATUS, VERIFY_OTP, VERIFY_OTP_ERROR, POST_FORGET, CHANGE_PASSWORD, CHANGE_PASSWORD_ERROR, POST_FORGET_ERROR, GET_BATCH_VERIFICATION } from './types';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nlet authtoken = localStorage.getItem('auth_token');\nconsole.log(localStorage.getItem('auth_token'));\nconsole.log(localStorage);\nexport const loginApi = data => dispatch => {\n  const API_URL = `${devURLTnega}api/users/login`;\n  const body = {\n    \"user\": {\n      \"email\": data.email,\n      \"password\": data.password\n    }\n  };\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(\"user data\", res);\n    dispatch({\n      type: POST_LOGIN,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_USER,\n      payload: res.data.user\n    });\n  }).catch(err => {\n    console.log(\"login--- \", err.response); // dispatch({type:POST_LOGIN_ERROR, payload:err.response.data})\n    // MySwal.fire(err.response.data.message);\n    // if(err.response.status == 401){\n    //     const data ={\n    //       refreshToken:localStorage.refresh_token\n    //     }\n    //     axios.post(`${devURLTnega}api/users/auth/token`,data)\n    //     .then((res) => {\n    //       localStorage.setItem('authorization',res.data.token)\n    //       localStorage.setItem('refreshToken',res.data.refreshToken)  \n    //     })\n    //     .catch((err) => {\n    //       const data={\n    //         email: localStorage.getItem('email_id'),\n    //         refreshToken:localStorage.getItem('refreshToken'),\n    //       }\n    //       axios.post('http://3.110.180.81:3000/api/users/logout',data)\n    //       .then((res) => {\n    //         localStorage.clear()\n    //         dispatch({type:LOGOUT_DATA, payload:res})\n    //       })\n    //     })\n    //   }\n    // if(err.response.data.message==\"Login Failed\"){\n    //     Swal.fire(\"Login\",\"Failed\",\"error\");\n    // }\n  });\n};\nexport const otpVerification = data => dispatch => {\n  const API_URL = `${devURLTnega}api/users/verifyotp`;\n  console.log('rflkfmlfkmlskmfk', data);\n  axios.post(API_URL, data, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(\"user data\", res.data);\n    dispatch({\n      type: OTP_VERIFY,\n      payload: res.data\n    }); // localStorage.setItem('authorization',res.user.token)\n    // localStorage.setItem('refreshToken',res.user.refreshtoken)\n  }).catch(err => {\n    console.log(\"login--- \", err.response);\n    dispatch({\n      type: OTP_VERIFY_ERROR,\n      payload: err\n    });\n    MySwal.fire(\"Invalid otp\");\n  });\n};\nexport const forgotApi = data => dispatch => {\n  const API_URL = `${devURLTnega}api/forgotpassword`;\n  const body = {\n    \"email\": data.email\n  };\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: POST_FORGET,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"Forgot --- \", err.response);\n    dispatch({\n      type: POST_FORGET_ERROR,\n      payload: err.response.data\n    });\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const OtpVerified = data => dispatch => {\n  console.log(data);\n  const API_URL = `${devURLTnega}api/users/verifyresetotp`;\n  axios.post(API_URL, data, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: VERIFY_OTP,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"verified otp \", err.response);\n    dispatch({\n      type: VERIFY_OTP_ERROR,\n      payload: err.response\n    });\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const changePassword = data => dispatch => {\n  console.log(data);\n  const API_URL = `${devURLTnega}api/users/changepassword`;\n  axios.post(API_URL, data, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: CHANGE_PASSWORD,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"verified otp \", err.response);\n    dispatch({\n      type: CHANGE_PASSWORD_ERROR,\n      payload: err.response\n    });\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //igr-batch-verification\n\nexport const getBatchVerification = () => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchschema `;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response);\n\n    if (response.status == 200) {\n      dispatch({\n        type: GET_BATCH_VERIFICATION,\n        payload: response\n      });\n    }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n}; //ResetoPassword\n\nexport const resetPassword = data => dispatch => {\n  const API_URL = `${devURLTnega}api/resetpassword`;\n  const body = {\n    \"user\": {\n      \"email\": data.email,\n      \"password\": data.password,\n      \"confirm_password\": data.confirm_password,\n      // \"username\": data.name,\n      \"role\": data.role,\n      \"zone\": data.Zone,\n      \"district\": data.District\n    }\n  };\n  axios.post(API_URL, body, {\n    headers: {\n      Authorization: 'Bearer ' + authtoken //localStorage.getItem('auth_token')\n\n    }\n  }).then(res => {\n    console.log(\"user data\", res.data.user);\n    dispatch({\n      type: POST_LOGIN,\n      payload: res.data\n    });\n    dispatch({\n      type: GET_USER,\n      payload: res.data.user\n    });\n  }).catch(err => {\n    console.log(\"login--- \", err.response);\n    dispatch({\n      type: POST_LOGIN_ERROR,\n      payload: err.response.data\n    });\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/store/Login/action.js"],"names":["axios","devURLTnega","POST_LOGIN","POST_LOGIN_ERROR","OTP_VERIFY","OTP_VERIFY_ERROR","LOGOUT_DATA","GET_USER","GET_ALL_MASTER_DATA","UPDATE_STATUS","VERIFY_OTP","VERIFY_OTP_ERROR","POST_FORGET","CHANGE_PASSWORD","CHANGE_PASSWORD_ERROR","POST_FORGET_ERROR","GET_BATCH_VERIFICATION","Swal","withReactContent","MySwal","authtoken","localStorage","getItem","console","log","loginApi","data","dispatch","API_URL","body","email","password","post","headers","Authorization","then","res","type","payload","user","catch","err","response","otpVerification","fire","forgotApi","status","refreshToken","setItem","token","message","OtpVerified","changePassword","getBatchVerification","get","clear","resetPassword","confirm_password","role","Zone","District"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { devURLTnega } from '../../utilities/config';\r\nimport {POST_LOGIN, POST_LOGIN_ERROR ,OTP_VERIFY,OTP_VERIFY_ERROR,LOGOUT_DATA, GET_USER, GET_ALL_MASTER_DATA, UPDATE_STATUS,VERIFY_OTP,VERIFY_OTP_ERROR, POST_FORGET,CHANGE_PASSWORD,CHANGE_PASSWORD_ERROR , POST_FORGET_ERROR, GET_BATCH_VERIFICATION} from './types';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nconst MySwal = withReactContent(Swal);\r\n\r\nlet authtoken = localStorage.getItem('auth_token')\r\nconsole.log(localStorage.getItem('auth_token'))\r\nconsole.log(localStorage)\r\n\r\nexport const loginApi = data => dispatch =>{\r\n\r\n    const API_URL = `${devURLTnega}api/users/login`;\r\n\r\n    const body={\r\n        \"user\": {\r\n            \"email\": data.email,\r\n            \"password\": data.password,            \r\n        }\r\n    };\r\n\r\n    axios.post(API_URL,body,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(\"user data\", res);\r\n        dispatch({type:POST_LOGIN, payload:res.data})\r\n        dispatch({type:GET_USER , payload:res.data.user})\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"login--- \",err.response);\r\n        // dispatch({type:POST_LOGIN_ERROR, payload:err.response.data})\r\n        // MySwal.fire(err.response.data.message);\r\n        // if(err.response.status == 401){\r\n\r\n        //     const data ={\r\n        //       refreshToken:localStorage.refresh_token\r\n        //     }\r\n        //     axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        //     .then((res) => {\r\n              \r\n        //       localStorage.setItem('authorization',res.data.token)\r\n        //       localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        //     })\r\n        //     .catch((err) => {\r\n        //       const data={\r\n        //         email: localStorage.getItem('email_id'),\r\n        //         refreshToken:localStorage.getItem('refreshToken'),\r\n        //       }\r\n        //       axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n        //       .then((res) => {\r\n        //         localStorage.clear()\r\n        //         dispatch({type:LOGOUT_DATA, payload:res})\r\n        //       })\r\n        //     })\r\n        //   }\r\n        // if(err.response.data.message==\"Login Failed\"){\r\n        //     Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        // }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const otpVerification = data => dispatch =>{\r\n\r\n    const API_URL = `${devURLTnega}api/users/verifyotp`;\r\n  console.log('rflkfmlfkmlskmfk',data)\r\n    axios.post(API_URL,data,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(\"user data\", res.data);        \r\n        dispatch({type:OTP_VERIFY, payload:res.data})\r\n        // localStorage.setItem('authorization',res.user.token)\r\n        // localStorage.setItem('refreshToken',res.user.refreshtoken)\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"login--- \",err.response);\r\n        dispatch({type:OTP_VERIFY_ERROR, payload:err})\r\n        MySwal.fire(\"Invalid otp\")\r\n        \r\n    })\r\n}\r\n\r\nexport const forgotApi = data => dispatch =>{\r\n\r\n    const API_URL = `${devURLTnega}api/forgotpassword`;\r\n\r\n    const body={\r\n    \r\n            \"email\": data.email\r\n           \r\n        \r\n    };\r\n\r\n    axios.post(API_URL,body,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(res.data);\r\n\r\n        dispatch({type:POST_FORGET, payload:res.data})\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(\"Forgot --- \",err.response);\r\n        dispatch({type:POST_FORGET_ERROR, payload:err.response.data})\r\n        if(err.response.status == 401){\r\n\r\n            const data ={\r\n              refreshToken: localStorage.getItem('refresh_token')\r\n            }\r\n            axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n            .then((res) => {\r\n              \r\n              localStorage.setItem('authorization',res.data.token)\r\n              localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n            })\r\n          }\r\n        if(err.response.data.message==\"Login Failed\"){\r\n            Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const OtpVerified = data => dispatch =>{\r\n\r\n    console.log(data);\r\n\r\n    const API_URL = `${devURLTnega}api/users/verifyresetotp`;\r\n\r\n    \r\n    axios.post(API_URL,data,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(res.data);\r\n\r\n        dispatch({type:VERIFY_OTP, payload:res.data})\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(\"verified otp \",err.response);\r\n        dispatch({type:VERIFY_OTP_ERROR, payload:err.response})\r\n        if(err.response.status == 401){\r\n\r\n            const data ={\r\n              refreshToken: localStorage.getItem('refresh_token')\r\n            }\r\n            axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n            .then((res) => {\r\n              \r\n              localStorage.setItem('authorization',res.data.token)\r\n              localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n            })\r\n          }\r\n        if(err.response.data.message==\"Login Failed\"){\r\n            Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        }\r\n    })\r\n}\r\n\r\nexport const changePassword = data => dispatch =>{\r\n\r\n    console.log(data);\r\n\r\n    const API_URL = `${devURLTnega}api/users/changepassword`;\r\n\r\n    \r\n    axios.post(API_URL,data,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(res.data);\r\n\r\n        dispatch({type:CHANGE_PASSWORD, payload:res.data})\r\n\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(\"verified otp \",err.response);\r\n        dispatch({type:CHANGE_PASSWORD_ERROR, payload:err.response})\r\n        if(err.response.status == 401){\r\n\r\n            const data ={\r\n              refreshToken: localStorage.getItem('refresh_token')\r\n            }\r\n            axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n            .then((res) => {\r\n              \r\n              localStorage.setItem('authorization',res.data.token)\r\n              localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n            })\r\n          }\r\n        if(err.response.data.message==\"Login Failed\"){\r\n            Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//igr-batch-verification\r\n\r\nexport const getBatchVerification =()=>(dispatch)=>{\r\n    const API_URL=`${devURLTnega}api/dashboard/batchschema `;\r\n    axios.get(API_URL,{\r\n        headers:{\r\n            Authorization:'Bearer '+ authtoken\r\n        }\r\n    }).then((res)=>res.data)\r\n    .then((response)=>{\r\n        console.log('200 - ',response)\r\n        if(response.status==200){\r\n            dispatch({type:GET_BATCH_VERIFICATION, payload:response})\r\n    }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.response);\r\n        if(err.response.status == 401){\r\n\r\n            const data ={\r\n              refreshToken: localStorage.getItem('refresh_token')\r\n            }\r\n            axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n            .then((res) => {\r\n              \r\n              localStorage.setItem('authorization',res.data.token)\r\n              localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n            })\r\n            .catch((err) => {\r\n              const data={\r\n                email: localStorage.getItem('email_id'),\r\n                refreshToken:localStorage.getItem('refreshToken'),\r\n              }\r\n              axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n              .then((res) => {\r\n                localStorage.clear()\r\n                dispatch({type:LOGOUT_DATA, payload:res})\r\n              })\r\n            })\r\n          }\r\n        if(err.response.data.message==\"Login Failed\"){\r\n            Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//ResetoPassword\r\n\r\nexport const resetPassword = data => dispatch =>{\r\n\r\n    const API_URL = `${devURLTnega}api/resetpassword`;\r\n\r\n    const body={\r\n        \"user\": {\r\n            \"email\": data.email,\r\n            \"password\": data.password,\r\n            \"confirm_password\": data.confirm_password,\r\n            // \"username\": data.name,\r\n            \r\n            \"role\": data.role,\r\n            \"zone\": data.Zone,\r\n            \"district\": data.District\r\n            \r\n        }\r\n    };\r\n\r\n    axios.post(API_URL,body,{\r\n        headers: {\r\n          Authorization: 'Bearer ' + authtoken, //localStorage.getItem('auth_token')\r\n        },\r\n      })\r\n    .then((res)=>{\r\n        console.log(\"user data\", res.data.user);\r\n        dispatch({type:POST_LOGIN, payload:res.data})\r\n        dispatch({type:GET_USER , payload:res.data.user})\r\n    })\r\n    .catch(err=>{\r\n        console.log(\"login--- \",err.response);\r\n        dispatch({type:POST_LOGIN_ERROR, payload:err.response.data})\r\n        if(err.response.status == 401){\r\n\r\n            const data ={\r\n              refreshToken: localStorage.getItem('refresh_token')\r\n            }\r\n            axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n            .then((res) => {\r\n              \r\n              localStorage.setItem('authorization',res.data.token)\r\n              localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n            })\r\n            .catch((err) => {\r\n              const data={\r\n                email: localStorage.getItem('email_id'),\r\n                refreshToken:localStorage.getItem('refreshToken'),\r\n              }\r\n              axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n              .then((res) => {\r\n                localStorage.clear()\r\n                dispatch({type:LOGOUT_DATA, payload:res})\r\n              })\r\n            })\r\n          }\r\n        if(err.response.data.message==\"Login Failed\"){\r\n            Swal.fire(\"Login\",\"Failed\",\"error\");\r\n        }\r\n    })\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}