{"ast":null,"code":"var _require = require('child_process'),\n    execSync = _require.execSync,\n    spawn = _require.spawn;\n\nvar _process = process,\n    platform = _process.platform;\n\nvar _require2 = require('path'),\n    join = _require2.join;\n\nvar isProgramInstalled = require('is-program-installed');\n\nvar windowsScript = join(__dirname, 'msgbox.vbs');\n\nvar execCmd = function execCmd(cmds) {\n  return spawn(cmds[0], cmds.splice(1));\n};\n\nvar unixPrograms = ['kdialog', 'zenity', 'yad', 'notify-send', 'xmessage', 'dialog', 'whiptail'];\nvar bestUnixProgram = unixPrograms.filter(isProgramInstalled)[0] || 'console';\n\nvar cscript = function cscript(s) {\n  return ['cscript', windowsScript, s];\n};\n\nvar msg = function msg(str) {\n  return ['msg', '\"%username%\"', str];\n};\n\nvar zenity = function zenity(s) {\n  return ['zenity', '--info', '--text', s];\n};\n\nvar yad = function yad(s) {\n  return ['yad', '--text', s, '--button', 'OK'];\n};\n\nvar notifySend = function notifySend(s) {\n  return ['notify-send', s];\n};\n\nvar xmessage = function xmessage(s) {\n  return ['xmessage', s];\n};\n\nvar dialog = function dialog(s) {\n  return ['dialog', '--msgbox', s, '10', '30'];\n};\n\nvar whiptail = function whiptail(s) {\n  return ['whiptail', '--msbox', s, '10', '30'];\n};\n\nvar kdialog = function kdialog(s) {\n  return ['kdialog', '--msgbox', s];\n};\n\nvar osascript = function osascript(s) {\n  return ['osascript', '-e', \"tell app \\\"System Events\\\" to display dialog \\\"\".concat(s, \"\\\" buttons \\\"OK\\\"\")];\n};\n\nvar hasCscript = platform.startsWith('win') && function () {\n  try {\n    execSync('cscript');\n    return true;\n  } catch (_unused) {\n    return false;\n  }\n}();\n\nvar nameMap = {\n  console: console.log,\n  cscript: cscript,\n  dialog: dialog,\n  kdialog: kdialog,\n  msg: msg,\n  'notify-send': notifySend,\n  osascript: osascript,\n  whiptail: whiptail,\n  xmessage: xmessage,\n  yad: yad,\n  zenity: zenity\n};\n\nvar getAlert = function getAlert() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var thingToUse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var execInput = function execInput(cmd) {\n    return execCmd(cmd(input));\n  };\n\n  var pickFromNameMap = function pickFromNameMap() {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : bestUnixProgram;\n\n    if (option !== 'console') {\n      if (nameMap[option]) {\n        return execInput(nameMap[option]);\n      }\n    }\n\n    return console.log(input);\n  };\n\n  if (thingToUse) {\n    return pickFromNameMap(thingToUse);\n  }\n\n  switch (platform) {\n    case 'linux':\n    case 'freebsd':\n    case 'sunos':\n      return pickFromNameMap(bestUnixProgram);\n\n    case 'darwin':\n      return execInput(osascript);\n\n    case 'win32':\n      return hasCscript ? execInput(cscript) : execInput(msg);\n\n    default:\n      return console.log(input);\n  }\n};\n\nmodule.exports = process.env.DISABLE_ALERT !== '1' ? getAlert : function () {};","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/node_modules/alert/node.js"],"names":["require","execSync","spawn","process","platform","join","isProgramInstalled","windowsScript","__dirname","execCmd","cmds","splice","unixPrograms","bestUnixProgram","filter","cscript","s","msg","str","zenity","yad","notifySend","xmessage","dialog","whiptail","kdialog","osascript","hasCscript","startsWith","nameMap","console","log","getAlert","input","thingToUse","execInput","cmd","pickFromNameMap","option","module","exports","env","DISABLE_ALERT"],"mappings":"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","sourcesContent":["const { execSync, spawn } = require('child_process')\nconst { platform } = process\nconst { join } = require('path')\nconst isProgramInstalled = require('is-program-installed')\nconst windowsScript = join(__dirname, 'msgbox.vbs')\n\nconst execCmd = (cmds) => spawn(cmds[0], cmds.splice(1))\n\nconst unixPrograms = [\n  'kdialog',\n  'zenity',\n  'yad',\n  'notify-send',\n  'xmessage',\n  'dialog',\n  'whiptail'\n]\n\nconst bestUnixProgram = unixPrograms.filter(isProgramInstalled)[0] || 'console'\n\nconst cscript = (s) => ['cscript', windowsScript, s]\nconst msg = (str) => ['msg', '\"%username%\"', str]\nconst zenity = (s) => ['zenity', '--info', '--text', s]\nconst yad = (s) => ['yad', '--text', s, '--button', 'OK']\nconst notifySend = (s) => ['notify-send', s]\nconst xmessage = (s) => ['xmessage', s]\nconst dialog = (s) => ['dialog', '--msgbox', s, '10', '30']\nconst whiptail = (s) => ['whiptail', '--msbox', s, '10', '30']\nconst kdialog = (s) => ['kdialog', '--msgbox', s]\nconst osascript = (s) => [\n  'osascript',\n  '-e',\n  `tell app \"System Events\" to display dialog \"${s}\" buttons \"OK\"`\n]\n\nconst hasCscript =\n  platform.startsWith('win') &&\n  (() => {\n    try {\n      execSync('cscript')\n      return true\n    } catch {\n      return false\n    }\n  })()\n\nconst nameMap = {\n  console: console.log,\n  cscript,\n  dialog,\n  kdialog,\n  msg,\n  'notify-send': notifySend,\n  osascript,\n  whiptail,\n  xmessage,\n  yad,\n  zenity\n}\n\nconst getAlert = (input = '', thingToUse = '') => {\n  const execInput = (cmd) => execCmd(cmd(input))\n\n  const pickFromNameMap = (option = bestUnixProgram) => {\n    if (option !== 'console') {\n      if (nameMap[option]) {\n        return execInput(nameMap[option])\n      }\n    }\n    return console.log(input)\n  }\n\n  if (thingToUse) {\n    return pickFromNameMap(thingToUse)\n  }\n\n  switch (platform) {\n    case 'linux':\n    case 'freebsd':\n    case 'sunos':\n      return pickFromNameMap(bestUnixProgram)\n    case 'darwin':\n      return execInput(osascript)\n    case 'win32':\n      return hasCscript ? execInput(cscript) : execInput(msg)\n    default:\n      return console.log(input)\n  }\n}\n\nmodule.exports = process.env.DISABLE_ALERT !== '1' ? getAlert : () => {}\n"]},"metadata":{},"sourceType":"script"}