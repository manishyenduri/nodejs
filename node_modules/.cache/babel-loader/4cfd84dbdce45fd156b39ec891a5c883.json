{"ast":null,"code":"import axios from 'axios';\nimport { devURLTnega } from '../../utilities/config';\nimport { GET_ALL_MASTER_DATA, GET_ALL_ZONES, GET_ALL_DISTRICT, GET_MIS_REPORT, BATCH_REPORT_ROW, GET_MIS_REPORT_BY_ID, LOGOUT_DATA } from './types';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nlet authtoken = localStorage.getItem('auth_token');\nconsole.log(localStorage.getItem('auth_token'));\nexport const getallMasterApi = () => dispatch => {\n  const API_URL = `${devURLTnega}api/master/districtsro `;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response);\n\n    if (response.status == true) {\n      dispatch({\n        type: GET_ALL_MASTER_DATA,\n        payload: response\n      });\n    }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getZones = () => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getallzone`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_ZONES,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const getDistrict = () => dispatch => {\n  const API_URL = `${devURLTnega}api/master/getdistrictzone`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_ALL_DISTRICT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const misReport = () => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==200){\n\n    dispatch({\n      type: GET_MIS_REPORT,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const batchVerify = id => dispatch => {\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`;\n  axios.get(API_URL, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n    }\n  }).then(res => res.data).then(response => {\n    console.log('200 - ', response); // if(response.status==true){\n\n    dispatch({\n      type: GET_MIS_REPORT_BY_ID,\n      payload: response\n    }); // }\n  }).catch(err => {\n    console.log(err.response);\n\n    if (err.response.status == 401) {\n      const data = {\n        refreshToken: localStorage.getItem('refresh_token')\n      };\n      axios.post(`${devURLTnega}api/users/auth/token`, data).then(res => {\n        localStorage.setItem('authorization', res.data.token);\n        localStorage.setItem('refreshToken', res.data.refreshToken);\n      }).catch(err => {\n        const data = {\n          email: localStorage.getItem('email_id'),\n          refreshToken: localStorage.getItem('refreshToken')\n        };\n        axios.post('http://3.110.180.81:3000/api/users/logout', data).then(res => {\n          localStorage.clear();\n          dispatch({\n            type: LOGOUT_DATA,\n            payload: res\n          });\n        });\n      });\n    }\n\n    if (err.response.data.message == \"Login Failed\") {\n      Swal.fire(\"Login\", \"Failed\", \"error\");\n    }\n  });\n};\nexport const sendDataToRedux = data => dispatch => {\n  dispatch({\n    type: BATCH_REPORT_ROW,\n    payload: data\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MySwal\");","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/store/DRO/action.js"],"names":["axios","devURLTnega","GET_ALL_MASTER_DATA","GET_ALL_ZONES","GET_ALL_DISTRICT","GET_MIS_REPORT","BATCH_REPORT_ROW","GET_MIS_REPORT_BY_ID","LOGOUT_DATA","Swal","withReactContent","MySwal","authtoken","localStorage","getItem","console","log","getallMasterApi","dispatch","API_URL","get","headers","Authorization","then","res","data","response","status","type","payload","catch","err","refreshToken","post","setItem","token","email","clear","message","fire","getZones","getDistrict","misReport","batchVerify","id","sendDataToRedux"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { devURLTnega } from '../../utilities/config'\r\nimport {\r\n  GET_ALL_MASTER_DATA,\r\n  GET_ALL_ZONES,\r\n  GET_ALL_DISTRICT,\r\n  GET_MIS_REPORT,\r\n  BATCH_REPORT_ROW,\r\n  GET_MIS_REPORT_BY_ID,\r\n  LOGOUT_DATA,\r\n} from './types'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\n\r\nlet authtoken = localStorage.getItem('auth_token')\r\nconsole.log(localStorage.getItem('auth_token'))\r\n\r\n\r\n\r\nexport const getallMasterApi = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/districtsro `\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      if (response.status == true) {\r\n        dispatch({ type: GET_ALL_MASTER_DATA, payload: response })\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: localStorage.getItem('refresh_token')\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getZones = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/getallzone`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_ALL_ZONES, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: localStorage.getItem('refresh_token')\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const getDistrict = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/master/getdistrictzone`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_ALL_DISTRICT, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: localStorage.getItem('refresh_token')\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const misReport = () => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==200){\r\n      dispatch({ type: GET_MIS_REPORT, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: localStorage.getItem('refresh_token')\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const batchVerify = (id) => (dispatch) => {\r\n  const API_URL = `${devURLTnega}api/dashboard/batchverification/${id}`\r\n  axios\r\n    .get(API_URL, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('auth_token'),\r\n      },\r\n    })\r\n    .then((res) => res.data)\r\n    .then((response) => {\r\n      console.log('200 - ', response)\r\n      // if(response.status==true){\r\n      dispatch({ type: GET_MIS_REPORT_BY_ID, payload: response })\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response)\r\n      if(err.response.status == 401){\r\n\r\n        const data ={\r\n          refreshToken: localStorage.getItem('refresh_token')\r\n        }\r\n        axios.post(`${devURLTnega}api/users/auth/token`,data)\r\n        .then((res) => {\r\n          \r\n          localStorage.setItem('authorization',res.data.token)\r\n          localStorage.setItem('refreshToken',res.data.refreshToken)  \r\n        })\r\n        .catch((err) => {\r\n          const data={\r\n            email: localStorage.getItem('email_id'),\r\n            refreshToken:localStorage.getItem('refreshToken'),\r\n          }\r\n          axios.post('http://3.110.180.81:3000/api/users/logout',data)\r\n          .then((res) => {\r\n            localStorage.clear()\r\n            dispatch({type:LOGOUT_DATA, payload:res})\r\n          })\r\n        })\r\n      }\r\n    if(err.response.data.message==\"Login Failed\"){\r\n        Swal.fire(\"Login\",\"Failed\",\"error\");\r\n    }\r\n    })\r\n}\r\n\r\nexport const sendDataToRedux = (data) => (dispatch) => {\r\n  dispatch({ type: BATCH_REPORT_ROW, payload: data })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}