{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/IGR/tnega-pratik/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { Provider } from 'react-redux'; // import { store } from './store';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loader = document.querySelector(\"#preloader\"); // if you want to show the loader when React loads data again\n\nconst showLoader = () => loader.classList.remove(\"loader--hide\");\n\nconst hideLoader = () => loader.classList.add(\"loader--hide\");\n\nsetTimeout(() => // the show/hide functions are passed as props\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(PersistGate, {\n    persistor: persistor,\n    children: /*#__PURE__*/_jsxDEV(App, {\n      hideLoader: hideLoader,\n      showLoader: showLoader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 7\n}, this), document.getElementById(\"root\")), 1700); // ReactDOM.render(\n//   // <React.StrictMode>\n//     <Provider store={store}>\n//         <App />\n//     </Provider>,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/user/Desktop/IGR/tnega-pratik/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","PersistGate","store","persistor","loader","document","querySelector","showLoader","classList","remove","hideLoader","add","setTimeout","render","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,sCAAP;AACA,OAAO,oCAAP;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,KAAT,EAAiBC,SAAjB,QAAkC,SAAlC;;AAGA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf,C,CAEA;;AACA,MAAMC,UAAU,GAAG,MAAMH,MAAM,CAACI,SAAP,CAAiBC,MAAjB,CAAwB,cAAxB,CAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAMN,MAAM,CAACI,SAAP,CAAiBG,GAAjB,CAAqB,cAArB,CAAzB;;AAEAC,UAAU,CACR,MACE;AACAf,QAAQ,CAACgB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,KAAjB;AAAA,yBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEC,SAAxB;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,UAAU,EAAEO,UAAjB;AAA6B,MAAA,UAAU,EAAEH;AAAzC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEF,QAAQ,CAACS,cAAT,CAAwB,MAAxB,CANF,CAHM,EAWR,IAXQ,CAAV,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport { Provider } from 'react-redux';\r\n// import { store } from './store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store,  persistor } from './store';\r\n\r\n\r\nconst loader = document.querySelector(\"#preloader\");\r\n\r\n// if you want to show the loader when React loads data again\r\nconst showLoader = () => loader.classList.remove(\"loader--hide\");\r\n\r\nconst hideLoader = () => loader.classList.add(\"loader--hide\");\r\n\r\nsetTimeout(\r\n  () =>\r\n    // the show/hide functions are passed as props\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <PersistGate persistor={persistor}>\r\n        <App hideLoader={hideLoader} showLoader={showLoader} />\r\n        </PersistGate>\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    ),\r\n  1700\r\n);\r\n// ReactDOM.render(\r\n//   // <React.StrictMode>\r\n//     <Provider store={store}>\r\n//         <App />\r\n//     </Provider>,\r\n//   // </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}